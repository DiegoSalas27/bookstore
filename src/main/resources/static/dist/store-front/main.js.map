{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/components/book-detail/book-detail.component.css","webpack:///./src/app/components/book-detail/book-detail.component.html","webpack:///./src/app/components/book-detail/book-detail.component.ts","webpack:///./src/app/components/book-list/book-list.component.css","webpack:///./src/app/components/book-list/book-list.component.html","webpack:///./src/app/components/book-list/book-list.component.ts","webpack:///./src/app/components/book-list/data.filter.pipe.ts","webpack:///./src/app/components/curriculum/curriculum.component.css","webpack:///./src/app/components/curriculum/curriculum.component.html","webpack:///./src/app/components/curriculum/curriculum.component.ts","webpack:///./src/app/components/footer/footer.component.css","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/logo/logo.component.css","webpack:///./src/app/components/logo/logo.component.html","webpack:///./src/app/components/logo/logo.component.ts","webpack:///./src/app/components/my-account/my-account.component.css","webpack:///./src/app/components/my-account/my-account.component.html","webpack:///./src/app/components/my-account/my-account.component.ts","webpack:///./src/app/components/my-profile/my-profile.component.css","webpack:///./src/app/components/my-profile/my-profile.component.html","webpack:///./src/app/components/my-profile/my-profile.component.ts","webpack:///./src/app/components/nav-bar/nav-bar.component.css","webpack:///./src/app/components/nav-bar/nav-bar.component.html","webpack:///./src/app/components/nav-bar/nav-bar.component.ts","webpack:///./src/app/components/order-summary/order-summary.component.css","webpack:///./src/app/components/order-summary/order-summary.component.html","webpack:///./src/app/components/order-summary/order-summary.component.ts","webpack:///./src/app/components/order/order.component.css","webpack:///./src/app/components/order/order.component.html","webpack:///./src/app/components/order/order.component.ts","webpack:///./src/app/components/shopping-cart/shopping-cart.component.css","webpack:///./src/app/components/shopping-cart/shopping-cart.component.html","webpack:///./src/app/components/shopping-cart/shopping-cart.component.ts","webpack:///./src/app/const/app-const.ts","webpack:///./src/app/models/billing-address.ts","webpack:///./src/app/models/book.ts","webpack:///./src/app/models/order.ts","webpack:///./src/app/models/payment.ts","webpack:///./src/app/models/shipping-address.ts","webpack:///./src/app/models/shopping-cart.ts","webpack:///./src/app/models/user-billing.ts","webpack:///./src/app/models/user-payment.ts","webpack:///./src/app/models/user-shipping.ts","webpack:///./src/app/models/user.ts","webpack:///./src/app/services/book.service.ts","webpack:///./src/app/services/cart.service.ts","webpack:///./src/app/services/checkout.service.ts","webpack:///./src/app/services/login.service.ts","webpack:///./src/app/services/order.service.ts","webpack:///./src/app/services/payment.service.ts","webpack:///./src/app/services/shipping.service.ts","webpack:///./src/app/services/upload-image.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".hidden{\\r\\n    display:none;\\r\\n}\\r\\n.show{\\r\\n    display:block;\\r\\n}\\r\\n#modal-container {\\r\\n    position:  fixed;\\r\\n    top: 80px;\\r\\n    left: 45%;\\r\\n    width: 500px;\\r\\n    background: white;\\r\\n    margin-left: -187.5px;\\r\\n    text-align: center;\\r\\n    box-shadow: 0px 0px 2px 1px black;\\r\\n    z-index: 100;\\r\\n}\\r\\n#overlay {\\r\\n    position: absolute;\\r\\n    top: 0px;\\r\\n    left:  0px;\\r\\n    z-index:  99;\\r\\n    background:  rgba(0,0,0,0.3);\\r\\n    width:  100%;\\r\\n    height: 211%;\\r\\n}\"","module.exports = \"<app-nav-bar></app-nav-bar>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\\n\\n<div id=\\\"modal-container\\\" class=\\\"hidden\\\"></div>\\n<div id=\\\"overlay\\\" (click)=\\\"removeModal()\\\" class=\\\"hidden\\\"></div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { MatButtonModule, MatCheckboxModule } from '@angular/material';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { DataTableModule } from \"angular2-datatable\";\nimport { DataFilterPipe } from './components/book-list/data.filter.pipe';\nimport { routing } from './app.routing';\n\nimport 'hammerjs';\n\nimport { LoginService } from './services/login.service';\nimport { UserService } from './services/user.service';\nimport { PaymentService } from './services/payment.service';\nimport { ShippingService } from './services/shipping.service';\nimport { BookService } from './services/book.service';\nimport { CartService } from './services/cart.service';\nimport { OrderService } from './services/order.service';\nimport { CheckoutService } from './services/checkout.service';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { MyAccountComponent } from './components/my-account/my-account.component';\nimport { LogoComponent } from './components/logo/logo.component';\nimport { MyProfileComponent } from './components/my-profile/my-profile.component';\nimport { BookListComponent } from './components/book-list/book-list.component';\nimport { BookDetailComponent } from './components/book-detail/book-detail.component';\nimport { ShoppingCartComponent } from './components/shopping-cart/shopping-cart.component';\nimport { OrderComponent } from './components/order/order.component';\nimport { OrderSummaryComponent } from './components/order-summary/order-summary.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { CurriculumComponent } from './components/curriculum/curriculum.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavBarComponent,\n    MyAccountComponent,\n    LogoComponent,\n    MyProfileComponent,\n    BookListComponent,\n    DataFilterPipe,\n    BookDetailComponent,\n    ShoppingCartComponent,\n    OrderComponent,\n    OrderSummaryComponent,\n    FooterComponent,\n    CurriculumComponent,\n  ],\n  imports: [\n    BrowserModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpModule,\n    MatTabsModule,\n    MatProgressSpinnerModule,\n    DataTableModule,\n    EditorModule,\n    routing\n  ],\n  providers: [\n  LoginService,\n  UserService,\n  PaymentService,\n  ShippingService,\n  BookService,\n  CartService,\n  OrderService,\n  CheckoutService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { MyAccountComponent } from './components/my-account/my-account.component'; \r\nimport { MyProfileComponent } from './components/my-profile/my-profile.component';\r\nimport { BookListComponent } from './components/book-list/book-list.component';\r\nimport { BookDetailComponent } from './components/book-detail/book-detail.component';\r\nimport { ShoppingCartComponent } from './components/shopping-cart/shopping-cart.component';\r\nimport { OrderComponent } from './components/order/order.component';\r\nimport { OrderSummaryComponent } from './components/order-summary/order-summary.component';\r\nimport { CurriculumComponent } from './components/curriculum/curriculum.component';\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: '/home',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: 'myAccount',\r\n    component: MyAccountComponent\r\n  },\r\n  {\r\n    path: 'myProfile',\r\n    component: MyProfileComponent\r\n  },\r\n  {\r\n    path: 'bookList',\r\n    component: BookListComponent\r\n  },\r\n  {\r\n    path: 'bookDetail/:id',\r\n    component: BookDetailComponent\r\n  },\r\n  {\r\n    path: 'shoppingCart',\r\n    component: ShoppingCartComponent\r\n  },\r\n  {\r\n    path: 'checkout',\r\n    component: OrderComponent\r\n  },\r\n  {\r\n    path: 'orderSummary',\r\n    component: OrderSummaryComponent\r\n  },\r\n  {\r\n    path: 'myCV',\r\n    component: CurriculumComponent\r\n  }\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-logo spanLabel=\\\"Book Details\\\"></app-logo>\\n\\n  <div class=\\\"row\\\">\\n        <div class=\\\"row\\\" style=\\\"margin-top: 20px;\\\">\\n            <div class=\\\"col-6\\\">\\n                <a routerLink=\\\"/bookList\\\">Back to book list</a>\\n                <br />\\n                <img class=\\\"img-responsive shadow p-8 mb-6\\\" src=\\\"{{serverPath}}/image/book/{{book.id}}.png\\\" style=\\\"width: 50%; margin: 25px 0px;\\\"/>\\n            </div>\\n            <div class=\\\"col-6\\\" style=\\\"margin-top: 40px; margin-left: -120px\\\">\\n                <h3><span *ngIf=\\\"addBookSuccess\\\" style=\\\"color:forestgreen\\\"><i class=\\\"fa fa-check\\\" style=\\\"color:forestgreen\\\"></i>Added to cart.</span></h3>\\n                <h3><span *ngIf=\\\"notEnoughStock\\\" style=\\\"color:red\\\">Oops, only <span>{{book.inStockNumber}}</span> In Stock.</span> </h3>\\n                <h3>{{book.title}}</h3>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-5\\\">\\n                        <h5><strong>Author: </strong><span>{{book.author}}</span></h5>\\n                        <p><strong>Publisher:</strong><span>{{book.publisher}}</span></p>\\n                        <p><strong>Publication Date:</strong><span>{{book.publicationDate}}</span></p>\\n                        <p><strong>Language:</strong><span>{{book.language}}</span></p>\\n                        <p><strong>Category:</strong><span>{{book.category}}</span></p>\\n                        <p><strong><span>{{book.format}}</span>:</strong> <span>{{book.numberOfPages}}</span> pages</p>\\n                        <p><strong>ISBN:</strong> <span>{{book.isbn}}</span></p>\\n                        <p><strong>Shipping Weight:</strong> <span>{{book.shippingWeight}}</span> ounces</p>\\n                    </div>\\n                    <div class=\\\"col-7\\\">\\n                        <div class=\\\"panel panel-default panel-faq\\\" style=\\\"border-width:5px; margin-top:40px;\\\">\\n                            <div class=\\\"panel-body\\\" style=\\\"background-color: #ededed; margin-top:20px; padding: 20px;\\\">\\n                                <div class=\\\"col-10\\\">\\n                                    <h4>Our Price: <span style=\\\"color: #db3208;\\\">$<span>\\n                        {{book.ourPrice | number : '1.2-2'}}\\n                      </span></span></h4>\\n                                    <p>List Price: <span style=\\\"text-decoration:line-through;\\\">$<span>{{book.listPrice | number : '1.2-2'}}</span></span>\\n                                    </p>\\n                                    <p>You Save: $<span>{{book.listPrice-book.ourPrice | number : '1.2-2'}}</span></p>\\n                                    <span>Qty: &nbsp;</span>\\n                                    <select [(ngModel)]=\\\"qty\\\" class=\\\"browser-default\\\" style=\\\"width:50px; display:inline;\\\">\\n                                        <option *ngFor=\\\"let x of numberList\\\" [ngValue]=\\\"x\\\">{{x}}</option>\\n                                    </select>\\n                                </div>\\n                                <br>\\n                                <div class=\\\"col-6\\\">\\n                                    <h4 *ngIf=\\\"book.inStockNumber>10\\\" style=\\\"color:green;\\\">In Stock</h4>\\n                      <h4 *ngIf=\\\"book.inStockNumber<10 && book.inStockNumber>0\\\" style=\\\"color:green;\\\">Only <span>{{book.inStockNumber}}</span> In Stock</h4>\\n                      <h4 *ngIf=\\\"book.inStockNumber==0\\\" style=\\\"color:darkred;\\\">Unavailable</h4>\\n                      <button mat-raised-button [disabled]=\\\"book.inStockNumber==0\\\" (click)=\\\"onAddToCart()\\\" class=\\\"custom\\\">Add to Cart</button>\\n                    </div>\\n                  </div>\\n                    \\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <hr />\\n            <p>{{book.description}}</p>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Book } from '../../models/book';\nimport { BookService } from '../../services/book.service';\nimport { CartService } from '../../services/cart.service';\nimport { Params, ActivatedRoute, Router } from '@angular/router';\nimport { Http } from '@angular/http';\nimport { AppConst } from '../../const/app-const';\n\n@Component({\n  selector: 'app-book-detail',\n  templateUrl: './book-detail.component.html',\n  styleUrls: ['./book-detail.component.css']\n})\nexport class BookDetailComponent implements OnInit {\n\n  private bookId: number;\n  private book: Book = new Book();\n  private serverPath = AppConst.serverPath;\n  private numberList: number[] = [1,2,3,4,5,6,7,8,9];\n  private qty: number;\n  private addBookSuccess: boolean = false;\n  private notEnoughStock: boolean = false;\n\n  constructor(private bookService: BookService, private cartService: CartService,\n   private router: Router, private http: Http, private route:ActivatedRoute) { }\n\n  onAddToCart() {\n    this.cartService.addItem(this.bookId, this.qty).subscribe(\n      res => {\n        console.log(res.text());\n        this.addBookSuccess=true;\n      },\n      err => {\n        console.log(err.text());\n        this.notEnoughStock=true;\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.route.params.forEach((params: Params) => {\n      this.bookId = Number.parseInt(params['id']);\n    });\n\n    this.bookService.getBook(this.bookId).subscribe(\n      res => {\n        this.book=res.json();\n      },\n      error => {\n        console.log(error);\n      }\n    );\n\n    this.qty = 1;\n  }\n\n}\n","module.exports = \".topleft {\\r\\n    position: absolute;\\r\\n    top: 8px;\\r\\n    left: 16px;\\r\\n    font-size: 18px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n   <app-logo spanLabel=\\\"Book Shelf\\\"></app-logo>\\n\\n   <div class=\\\"row\\\">\\n      <div class=\\\"col-3\\\"></div>\\n      <div class=\\\"col-12\\\">\\n        <table class=\\\"table\\\" [mfData]=\\\"bookList | dataFilter : filterQuery\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"rowsOnPage\\\" [(mfSortBy)]=\\\"sortBy\\\" [(mfSortOrder)]=\\\"sortOrder\\\">\\n          <thead>\\n            <tr>\\n              <th colspan=\\\"5\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-9\\\">\\n                    Filter by Description:\\n                    <input style=\\\"margin-top: 8px;\\\"class=\\\"form-control\\\" [(ngModel)]=\\\"filterQuery\\\" />\\n                  </div>\\n                  <div class=\\\"col-3\\\">\\n                    <label class=\\\"label-control\\\">Rows on page</label>\\n                    <select class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"rowsOnPage\\\">\\n                      <option [ngValue]=\\\"5\\\">5</option>\\n                      <option [ngValue]=\\\"10\\\">10</option>\\n                      <option [ngValue]=\\\"15\\\">15</option>\\n                    </select>\\n                  </div>\\n                </div>\\n              </th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor = \\\"let book of mf.data\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-3\\\">\\n                  <a (click)=\\\"onSelect(book)\\\" style=\\\"cursor:pointer;\\\">\\n                    <img class=\\\"img-responsive\\\" src=\\\"{{serverPath}}/image/book/{{book.id}}.png\\\" style=\\\"width: 65%; margin-top: 20px;\\\" />\\n                  </a>\\n                </div>\\n                <div class=\\\"col-9\\\">\\n                  <h4 (click)=\\\"onSelect(book)\\\" style=\\\"margin-top:20px; cursor:pointer;\\\">{{book.title}}\\n                  </h4>\\n                  <span>{{book.publicationDate}}</span>\\n                  <p>{{book.author}}</p>\\n                  <a (click)=\\\"onSelect(book)\\\" style=\\\"cursor:pointer;\\\"><span>{{book.format | uppercase}}</span></a>\\n                  <span>  {{book.numberOfPages}}</span><span> pages</span>\\n                  <br />\\n                  <a (click)=\\\"onSelect(book)\\\"><span style=\\\"font-size: x-large; color:#db3208\\\">$<span>{{book.ourPrice | number : '1.2-2'}}  </span></span></a>\\n                  <span style=\\\"text-decoration:line-through;\\\">$<span>{{book.listPrice | number : '1.2-2'}}</span></span>\\n                  <!-- use tinyMCE to display every desxription correctly -->\\n                  <p>{{book.description | slice:0:500}}</p>\\n                </div>\\n              </div>\\n            </tr>\\n          </tbody>\\n          <tfoot>\\n            <tr>\\n              <td colspan=\\\"5\\\">\\n                <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5,10,15]\\\"></mfBootstrapPaginator>\\n              </td>\\n            </tr>\\n          </tfoot>\\n        </table>\\n      </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Book } from '../../models/book';\nimport { BookService } from '../../services/book.service';\nimport { Params, ActivatedRoute, Router } from '@angular/router';\nimport { Http } from '@angular/http';\nimport { AppConst } from '../../const/app-const';\n\n@Component({\n  selector: 'app-book-list',\n  templateUrl: './book-list.component.html',\n  styleUrls: ['./book-list.component.css']\n})\nexport class BookListComponent implements OnInit {\n\n  public filterQuery = \"\";\n  public rowsOnPage = 5;\n  private selectedBook: Book;\n  private bookList: Book[];\n  private serverPath = AppConst.serverPath;\n\n  constructor(private bookService: BookService, private router: Router, private http: Http,\n  private route:ActivatedRoute) { }\n\n  onSelect(book: Book){\n    this.selectedBook = book;\n    this.router.navigate(['/bookDetail', this.selectedBook.id]);\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(\n      params=>{ \n        if(params['bookList']){\n          console.log(\"filtered book list\");\n          this.bookList = JSON.parse(params['bookList']);\n        } else {\n          this.bookService.getBookList().subscribe(\n            res => {\n              console.log(res.json());\n              this.bookList = res.json();\n            },\n            error => {\n              console.log(error);\n            }\n          );\n        }\n      }\n    );\n  }\n\n}\n","import * as _ from \"lodash\";\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n  name:\"dataFilter\"\r\n})\r\nexport class DataFilterPipe implements PipeTransform {\r\n  transform(array: any[], query: string) : any {\r\n    if(query) {\r\n      return _.filter(array, row=> row.description.indexOf(query) > -1);\r\n    }\r\n    return array;\r\n  }\r\n}","module.exports = \"\\r\\narticle,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section {\\r\\ndisplay:block;\\r\\n}\\r\\n\\r\\nhtml, body {background: #181818; font-family: 'Lato', helvetica, arial, sans-serif; font-size: 16px; color: #222;}\\r\\n\\r\\n.clear {clear: both;}\\r\\n\\r\\np {\\r\\n  font-size: 1em;\\r\\n  line-height: 1.4em;\\r\\n  margin-bottom: 20px;\\r\\n  color: #444;\\r\\n}\\r\\n\\r\\n#cv {\\r\\n  width: 100%;\\r\\n  max-width: 800px;\\r\\n  background: #f3f3f3;\\r\\n  margin: 30px auto;\\r\\n}\\r\\n\\r\\n.mainDetails {\\r\\n  padding: 25px 35px;\\r\\n  border-bottom: 2px solid #cf8a05;\\r\\n  background: #ededed;\\r\\n}\\r\\n\\r\\n#name h1 {\\r\\n  font-size: 2.5em;\\r\\n  font-weight: 700;\\r\\n  font-family: 'Rokkitt', Helvetica, Arial, sans-serif;\\r\\n  margin-bottom: -6px;\\r\\n}\\r\\n\\r\\n#name h2 {\\r\\n  font-size: 2em;\\r\\n  margin-left: 2px;\\r\\n  font-family: 'Rokkitt', Helvetica, Arial, sans-serif;\\r\\n}\\r\\n\\r\\n#mainArea {\\r\\n  padding: 0 40px;\\r\\n}\\r\\n\\r\\n#headshot {\\r\\n  width: 12.5%;\\r\\n  float: left;\\r\\n  margin-right: 30px;\\r\\n}\\r\\n\\r\\n#headshot img {\\r\\n  width: 100%;\\r\\n  height: auto;\\r\\n  border-radius: 50px;\\r\\n}\\r\\n\\r\\n#name {\\r\\n  float: left;\\r\\n}\\r\\n\\r\\n#contactDetails {\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n#contactDetails ul {\\r\\n  list-style-type: none;\\r\\n  font-size: 0.9em;\\r\\n  margin-top: 2px;\\r\\n}\\r\\n\\r\\n#contactDetails ul li {\\r\\n  margin-bottom: 3px;\\r\\n  color: #444;\\r\\n}\\r\\n\\r\\n#contactDetails ul li a, a[href^=tel] {\\r\\n  color: #444; \\r\\n  text-decoration: none;\\r\\n  transition: all .3s ease-in;\\r\\n}\\r\\n\\r\\n#contactDetails ul li a:hover { \\r\\n  color: #cf8a05;\\r\\n}\\r\\n\\r\\nsection {\\r\\n  border-top: 1px solid #dedede;\\r\\n  padding: 20px 0 0;\\r\\n}\\r\\n\\r\\nsection:first-child {\\r\\n  border-top: 0;\\r\\n}\\r\\n\\r\\nsection:last-child {\\r\\n  padding: 20px 0 10px;\\r\\n}\\r\\n\\r\\n.sectionTitle {\\r\\n  float: left;\\r\\n  width: 25%;\\r\\n}\\r\\n\\r\\n.sectionContent {\\r\\n  float: right;\\r\\n  width: 72.5%;\\r\\n}\\r\\n\\r\\n.sectionTitle h1 {\\r\\n  font-family: 'Rokkitt', Helvetica, Arial, sans-serif;\\r\\n  font-style: italic;\\r\\n  font-size: 1.5em;\\r\\n  color: #cf8a05;\\r\\n}\\r\\n\\r\\n.sectionContent h2 {\\r\\n  font-family: 'Rokkitt', Helvetica, Arial, sans-serif;\\r\\n  font-size: 1.5em;\\r\\n  margin-bottom: -2px;\\r\\n}\\r\\n\\r\\n.subDetails {\\r\\n  font-size: 0.8em;\\r\\n  font-style: italic;\\r\\n  margin-bottom: 3px;\\r\\n}\\r\\n\\r\\n.keySkills {\\r\\n  list-style-type: none;\\r\\n  -webkit-column-count:3;\\r\\n  column-count:3;\\r\\n  margin-bottom: 20px;\\r\\n  font-size: 1em;\\r\\n  color: #444;\\r\\n}\\r\\n\\r\\n.keySkills ul li {\\r\\n  margin-bottom: 3px;\\r\\n}\\r\\n\\r\\n@media all and (min-width: 602px) and (max-width: 800px) {\\r\\n  #headshot {\\r\\n    display: none;\\r\\n  }\\r\\n  \\r\\n  .keySkills {\\r\\n  -webkit-column-count:2;\\r\\n  column-count:2;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media all and (max-width: 601px) {\\r\\n  #cv {\\r\\n    width: 95%;\\r\\n    margin: 10px auto;\\r\\n    min-width: 280px;\\r\\n  }\\r\\n  \\r\\n  #headshot {\\r\\n    display: none;\\r\\n  }\\r\\n  \\r\\n  #name, #contactDetails {\\r\\n    float: none;\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n  }\\r\\n  \\r\\n  .sectionTitle, .sectionContent {\\r\\n    float: none;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .sectionTitle {\\r\\n    margin-left: -2px;\\r\\n    font-size: 1.25em;\\r\\n  }\\r\\n  \\r\\n  .keySkills {\\r\\n    -webkit-column-count:2;\\r\\n    column-count:2;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media all and (max-width: 480px) {\\r\\n  .mainDetails {\\r\\n    padding: 15px 15px;\\r\\n  }\\r\\n  \\r\\n  section {\\r\\n    padding: 15px 0 0;\\r\\n  }\\r\\n  \\r\\n  #mainArea {\\r\\n    padding: 0 25px;\\r\\n  }\\r\\n\\r\\n  \\r\\n  .keySkills {\\r\\n  -webkit-column-count:1;\\r\\n  column-count:1;\\r\\n  }\\r\\n  \\r\\n  #name h1 {\\r\\n    line-height: .8em;\\r\\n    margin-bottom: 4px;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media print {\\r\\n    #cv {\\r\\n        width: 100%;\\r\\n    }\\r\\n}\\r\\n\\r\\n@-webkit-keyframes reset {\\r\\n  0% {\\r\\n    opacity: 0;\\r\\n  }\\r\\n  100% {\\r\\n    opacity: 0;\\r\\n  }\\r\\n}\\r\\n\\r\\n@-webkit-keyframes fade-in {\\r\\n  0% {\\r\\n    opacity: 0;\\r\\n  }\\r\\n  40% {\\r\\n    opacity: 0;\\r\\n  }\\r\\n  100% {\\r\\n    opacity: 1;\\r\\n  }\\r\\n}\\r\\n\\r\\n@keyframes reset {\\r\\n  0% {\\r\\n    opacity: 0;\\r\\n  }\\r\\n  100% {\\r\\n    opacity: 0;\\r\\n  }\\r\\n}\\r\\n\\r\\n@keyframes fade-in {\\r\\n  0% {\\r\\n    opacity: 0;\\r\\n  }\\r\\n  40% {\\r\\n    opacity: 0;\\r\\n  }\\r\\n  100% {\\r\\n    opacity: 1;\\r\\n  }\\r\\n}\\r\\n\\r\\n.instaFade {\\r\\n    -webkit-animation-name: reset, fade-in;\\r\\n    -webkit-animation-duration: 1.5s;\\r\\n    -webkit-animation-timing-function: ease-in;\\r\\n  \\r\\n  -moz-animation-name: reset, fade-in;\\r\\n    -moz-animation-duration: 1.5s;\\r\\n    -moz-animation-timing-function: ease-in;\\r\\n  \\r\\n  animation-name: reset, fade-in;\\r\\n    animation-duration: 1.5s;\\r\\n    animation-timing-function: ease-in;\\r\\n}\\r\\n\\r\\n.quickFade {\\r\\n    -webkit-animation-name: reset, fade-in;\\r\\n    -webkit-animation-duration: 2.5s;\\r\\n    -webkit-animation-timing-function: ease-in;\\r\\n  \\r\\n  -moz-animation-name: reset, fade-in;\\r\\n    -moz-animation-duration: 2.5s;\\r\\n    -moz-animation-timing-function: ease-in;\\r\\n  \\r\\n  animation-name: reset, fade-in;\\r\\n    animation-duration: 2.5s;\\r\\n    animation-timing-function: ease-in;\\r\\n}\\r\\n\\r\\n.delayOne {\\r\\n  -webkit-animation-delay: 0, .5s;\\r\\n  animation-delay: 0, .5s;\\r\\n}\\r\\n\\r\\n.delayTwo {\\r\\n  -webkit-animation-delay: 0, 1s;\\r\\n  animation-delay: 0, 1s;\\r\\n}\\r\\n\\r\\n.delayThree {\\r\\n  -webkit-animation-delay: 0, 1.5s;\\r\\n  animation-delay: 0, 1.5s;\\r\\n}\\r\\n\\r\\n.delayFour {\\r\\n  -webkit-animation-delay: 0, 2s;\\r\\n  animation-delay: 0, 2s;\\r\\n}\\r\\n\\r\\n.delayFive {\\r\\n  -webkit-animation-delay: 0, 2.5s;\\r\\n  animation-delay: 0, 2.5s;\\r\\n}\"","module.exports = \"\\n<div id=\\\"cv\\\" class=\\\"instaFade\\\">\\n  <div class=\\\"mainDetails\\\">\\n    <div id=\\\"headshot\\\" class=\\\"quickFade\\\">\\n      <img src=\\\"../../../assets/image/yo.jpg\\\" alt=\\\"Diego Salas\\\" />\\n    </div>\\n    \\n    <div id=\\\"name\\\">\\n      <h1 class=\\\"quickFade delayTwo\\\">Diego Salas</h1>\\n      <h2 class=\\\"quickFade delayThree\\\">Web Developer</h2>\\n    </div>\\n    \\n    <div id=\\\"contactDetails\\\" class=\\\"quickFade delayFour\\\">\\n      <ul>\\n        <li>email: <a href=\\\"mailto:dominicsc2hs@gmail.com\\\" target=\\\"_blank\\\">dominicsc2hs@gmail.com</a></li>\\n        <li>github: <a href=\\\"https://github.com/DiegoSalas27\\\">DiegoSalas27</a></li>\\n      </ul>\\n    </div>\\n    <div class=\\\"clear\\\"></div>\\n  </div>\\n  \\n  <div id=\\\"mainArea\\\" class=\\\"quickFade delayFive\\\">\\n    <section>\\n      <article>\\n        <div class=\\\"sectionTitle\\\">\\n          <h1>Personal Profile</h1>\\n        </div>\\n        \\n        <div class=\\\"sectionContent\\\">\\n          <p>I hold a bachellor degree in culinary arts from Le Cordon Bleu University and I am an English teacher certified by the Asociación Cultural Peruano Británica, but stopped working after 2 years. Currently, I´m studying Software engineering at UPC University and I´m in the sixth semester of my carrer. I´m looking forward to developing my skills as a web and android developer, branches in which I consider to have an intermediate level.</p>\\n        </div>\\n      </article>\\n      <div class=\\\"clear\\\"></div>\\n    </section>\\n    \\n    \\n    <section>\\n      <div class=\\\"sectionTitle\\\">\\n        <h1>Work Experience</h1>\\n      </div>\\n      \\n      <div class=\\\"sectionContent\\\">\\n        <article>\\n          <h2>Estamos Fritos </h2>\\n          <p class=\\\"subDetails\\\">2015 – December 2015</p>\\n          <p>Chef in charge of Fry Station</p>\\n        </article>\\n        \\n        <article>\\n          <h2>Rodrigo restaurant</h2>\\n          <p class=\\\"subDetails\\\">March 2014 - July 2014</p>\\n          <p>Chef trainee in charge of mise en place</p>\\n        </article>\\n        \\n        <article>\\n          <h2>Amaz restaurant</h2>\\n          <p class=\\\"subDetails\\\">enero 2013 - abril 2013</p>\\n          <p>Chef trainee under Cold Station</p>\\n        </article>\\n      </div>\\n      <div class=\\\"clear\\\"></div>\\n    </section>\\n    \\n    \\n    <section>\\n      <div class=\\\"sectionTitle\\\">\\n        <h1>Hard Skills</h1>\\n      </div>\\n      \\n      <div class=\\\"sectionContent\\\">\\n        <article>\\n          <h2>Languages:</h2> <p>JavaScript, Css, Html, Java, C#, C++, Sql</p>\\n          <h2>DBMS:</h2> <p>Postgres, MySql, Sql Server</p>\\n          <h2>Frontend:</h2> <p>React, Angular</p>\\n          <h2>Web frameworks:</h2> <p>ASP.NET, Spring Boot</p>\\n        </article>\\n      </div>\\n      <div class=\\\"clear\\\"></div>\\n    </section>\\n    \\n    \\n    <section>\\n      <div class=\\\"sectionTitle\\\">\\n        <h1>Education</h1>\\n      </div>\\n      \\n      <div class=\\\"sectionContent\\\">\\n        <article>\\n          <h2>UPC University</h2>\\n          <p class=\\\"subDetails\\\">April 2016 - Present </p>\\n        </article>\\n        \\n        <article>\\n          <h2>Le Cordon Bleu University</h2>\\n          <p class=\\\"subDetails\\\">April 2011- July 2016 </p>\\n          <p>Finished.</p>\\n        </article>\\n      </div>\\n      <div class=\\\"clear\\\"></div>\\n    </section>\\n    \\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-curriculum',\n  templateUrl: './curriculum.component.html',\n  styleUrls: ['./curriculum.component.css']\n})\nexport class CurriculumComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"footer{\\r\\n  color: white;\\r\\n  margin-top: 100px;\\r\\n}\\r\\nfooter a{\\r\\n  color: #DADADA;\\r\\n}\\r\\nfooter a:hover{\\r\\n  color: white;\\r\\n}\\r\\n.title{\\r\\n  color: white;\\r\\n}\\r\\n.footer-bottom{\\r\\n  background: #3D3D3D;\\r\\n  padding: 0.5em;\\r\\n}\\r\\n.footer-top{\\r\\n  background: #3D3D3D;  \\r\\n}\\r\\n.footer-middle{\\r\\n  background: #727272;\\r\\n  padding-top: 2em;\\r\\n  color: #DADADA;\\r\\n}\\r\\n/**Sub Navigation**/\\r\\n.subnavigation-container{\\r\\n  background: #3d6277;\\r\\n}\\r\\n.subnavigation .nav-link{\\r\\n  color: white;\\r\\n  font-weight: bold;\\r\\n}\\r\\n.subnavigation-container{\\r\\n  text-align: center;\\r\\n}\\r\\n.subnavigation-container .navbar{\\r\\n  display: inline-block;\\r\\n  margin-bottom: -6px; /* Inline-block margin offffset HACK -Gilron */\\r\\n}\\r\\n.col-subnav a{\\r\\n  padding: 1rem 1rem;\\r\\n  color: white;\\r\\n  font-weight: bold;\\r\\n}\\r\\n.col-subnav .active{\\r\\n  border-top:5px solid orange;\\r\\n background: white;\\r\\n  color: black;\\r\\n}\\r\\n.list-unstyled > li > a {\\r\\n text-decoration: none;\\r\\n transition: color 0.3s linear;\\r\\n -webkit-transition: color 0.3s linear;\\r\\n -moz-transition: color 0.3s linear;\\r\\n  padding-top: 10px;\\r\\n  color: #DADADA;\\r\\n  margin-left:30px;\\r\\n}\\r\\n.list-unstyled > li > a:hover,\\r\\n.list-unstyled > li > a:focus {\\r\\n    color: white;\\r\\n\\r\\n}\"","module.exports = \"\\n\\n<footer class=\\\"mainfooter\\\" role=\\\"contentinfo\\\">\\n\\n  <div class=\\\"footer-middle\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3 col-sm-6\\\">\\n        <!--Column1-->\\n        <div class=\\\"footer-pad\\\">\\n          <h4 class=\\\"title\\\">Address</h4>\\n          <address>\\n                <ul class=\\\"list-unstyled\\\">\\n                  <li>\\n                    Av. Maximiliano Velarde Pj2<br>\\n                    Mz. B Lot 3<br>\\n                    Tercer Piso<br>\\n                  </li>\\n                  <li>\\n                    Phone: 959363398\\n                  </li>\\n                </ul>\\n              </address>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3 col-sm-6\\\">\\n        <!--Column1-->\\n        <div class=\\\"footer-pad\\\">\\n          <h4 class=\\\"title\\\" style=\\\"margin-bottom: 15px;\\\">Services</h4>\\n          <ul class=\\\"list-unstyled\\\">\\n            <li><a class=\\\"nav-link\\\" style=\\\"margin: -15px;\\\" routerLink=\\\"/myAccount\\\">None yet</a></li>\\n          </ul>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3 col-sm-6\\\">\\n        <!--Column1-->\\n        <div class=\\\"footer-pad\\\">\\n          <h4 class=\\\"title\\\" style=\\\"margin-bottom: 15px;\\\">Website Information</h4>\\n          <ul class=\\\"list-unstyled\\\">\\n            <li><a class=\\\"nav-link\\\" style=\\\"margin: -15px;\\\" routerLink=\\\"/myAccount\\\">FAQs</a></li>\\n            <li><a class=\\\"nav-link\\\" style=\\\"margin: -15px;\\\" routerLink=\\\"/myAccount\\\">Webmaster</a></li>\\n          </ul>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3 col-sm-6\\\">\\n        <!--Column1-->\\n        <div class=\\\"footer-pad\\\">\\n          <h4 class=\\\"title\\\" style=\\\"margin-bottom: 15px;\\\">About me</h4>\\n          <ul class=\\\"list-unstyled\\\">\\n            <li><a class=\\\"nav-link\\\" style=\\\"margin: -15px;\\\" routerLink=\\\"/myCV\\\">CV</a></li>\\n            <li><a class=\\\"nav-link\\\" style=\\\"margin: -15px;\\\" href=\\\"https://github.com/DiegoSalas27\\\">Github</a></li>\\n            <li><a class=\\\"nav-link\\\" style=\\\"margin: -15px;\\\" href=\\\"https://www.facebook.com/diego.salasnoain\\\">Facebook</a></li>\\n          </ul>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  </div>\\n  <div class=\\\"footer-bottom\\\" style=\\\"padding-top: 20px;\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <!--Footer Bottom-->\\n          <p class=\\\"text-center\\\">&copy; Copyright 2018 - Dom's BookStore Inc..  All rights reserved.</p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  \n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent {\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n   <app-logo spanLabel=\\\"Home\\\"></app-logo>\\n\\n  <div style=\\\"margin-top: 40px\\\" class=\\\"row\\\">\\n    <div class=\\\"col-4\\\">\\n      <div class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-body\\\">\\n          <a class=\\\"pointer\\\" routerLink=\\\"/bookList\\\">\\n            <img src=\\\"../../../assets/image/bestseller.png\\\" class=\\\"img-fluid\\\"/>\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-4\\\">\\n      <div class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-body\\\">\\n          <a class=\\\"pointer\\\" routerLink=\\\"/hours\\\">\\n            <img src=\\\"../../../assets/image/hours.png\\\" class=\\\"img-fluid\\\"/>\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-4\\\">\\n      <div class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-body\\\">\\n          <a class=\\\"pointer\\\" routerLink=\\\"/faq\\\">\\n            <img src=\\\"../../../assets/image/faq.png\\\" class=\\\"img-fluid\\\"/>\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div>\\n    <div style=\\\"margin-top: 40px\\\" class=\\\"home-headline\\\"><span>Featured Books</span></div>\\n    <hr style=\\\"margin-top: -15px;\\\" />\\n  </div>\\n\\n  <img class=\\\"img-fluid\\\" src=\\\"../../../assets/image/shelf.png\\\"  style=\\\" margin-top: -5px; z-index:-1;\\\" />\\n\\n  <div class=\\\"row\\\" style=\\\"margin:auto; margin-top:-190px; margin-bottom:50px; width:90%;\\\">\\n    <div class=\\\"col-2\\\">\\n      <img class=\\\"img-fluid\\\" style=\\\"width: 65%;\\\" src=\\\"../../../assets/image/book1.png\\\" />\\n    </div>\\n    <div class=\\\"col-2\\\">\\n      <img class=\\\"img-fluid\\\" style=\\\"width: 65%;\\\" src=\\\"../../../assets/image/book1.png\\\" />\\n    </div>\\n    <div class=\\\"col-2\\\">\\n      <img class=\\\"img-fluid\\\" style=\\\"width: 65%;\\\" src=\\\"../../../assets/image/book1.png\\\" />\\n    </div>\\n    <div class=\\\"col-2\\\">\\n      <img class=\\\"img-fluid\\\" style=\\\"width: 65%;\\\" src=\\\"../../../assets/image/book1.png\\\" />\\n    </div>\\n    <div class=\\\"col-2\\\">\\n      <img class=\\\"img-fluid\\\" style=\\\"width: 65%;\\\" src=\\\"../../../assets/image/book1.png\\\" />\\n    </div>\\n    <div class=\\\"col-2\\\">\\n      <img class=\\\"img-fluid\\\" style=\\\"width: 65%;\\\" src=\\\"../../../assets/image/book1.png\\\" />\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  \n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\" style=\\\"margin-left: 30px\\\">\\n    <div class=\\\"col-8\\\">\\n      <h2 style=\\\"margin-top: 10px;\\\" class=\\\"section-headline float-left\\\"><span>{{spanLabel}}</span></h2>\\n    </div>\\n    <div class=\\\"col-4\\\">\\n      <img src=\\\"../../../assets/image/logo.png\\\" class=\\\"img-fluid float-center\\\" style=\\\"width:250px; z-index:1;\\\" />\\n    </div>\\n    <img src=\\\"../../../assets/image/wood.png\\\" class=\\\"img-fluid right rounded\\\" style=\\\"position: absolute; margin-top: 10px; z-index: -1;\\\" />\\n</div>\"","import { Component, OnInit, Input  } from '@angular/core';\n\n@Component({\n  selector: 'app-logo',\n  templateUrl: './logo.component.html',\n  styleUrls: ['./logo.component.css']\n})\nexport class LogoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  @Input() spanLabel: string;\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n <app-logo spanLabel=\\\"My Account\\\"></app-logo>\\n\\n  <div class=\\\"row\\\" style=\\\"margin-top:30px;\\\">\\n    <div class=\\\"col-3\\\"></div>\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"panel-group\\\">\\n        <div class=\\\"panel panel-default panel-faq\\\" style=\\\"border:none;\\\">\\n          <div class=\\\"panel-body\\\" style=\\\"background-color: #ededed; margin-top:20px;\\\">\\n            <mat-tab-group dynamicHeight class=\\\"shadow p-10 mb-12\\\">\\n              <mat-tab label=\\\"Login\\\">\\n                <div style=\\\"margin:20px;\\\">\\n                  <div *ngIf=\\\"loginError\\\" style=\\\"color:red;\\\">\\n                    Incorrect username or password.\\n                  </div>\\n\\n                  <form (ngSubmit)=\\\"onLogin()\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for =\\\"username\\\">Username *</label>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" name=\\\"username\\\" [(ngModel)]=\\\"credential.username\\\" required=\\\"required\\\" autofocus=\\\"autofocus\\\">\\n                      <p style=\\\"color:#828282;\\\">Enter your username</p>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for =\\\"password\\\">Password *</label>\\n                      <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"credential.password\\\" required=\\\"required\\\" autofocus=\\\"autofocus\\\">\\n                      <p style=\\\"color:#828282;\\\">Enter your password</p>\\n                    </div>\\n                    <button mat-raised-button type=\\\"submit\\\" class=\\\"custom\\\">Log In</button>\\n                  </form>\\n                </div>\\n              </mat-tab>\\n              <mat-tab label=\\\"New Account\\\">\\n                <div style=\\\"margin:20px;\\\">\\n                  <div class=\\\"alert alert-info\\\" *ngIf=\\\"emailSent\\\">An email has been sent to the email address you have just registered. Please validate your email address and update your password.</div>\\n                \\n                  <form (ngSubmit)=\\\"onNewAccount()\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"newUsername\\\">Username *</label>&nbsp;<!-- space --><span *ngIf=\\\"usernameExists\\\" style=\\\"color: red;\\\">Username already exists. Please choose different one</span>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"newUsername\\\" name=\\\"username\\\" [(ngModel)]=\\\"username\\\" required=\\\"required\\\">\\n                      <p style=\\\"color:#828282;\\\">Enter your username</p>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"email\\\">Email address *</label>&nbsp;<!-- space --><span *ngIf=\\\"emailExists\\\" style=\\\"color: red;\\\">Email already exists. Please choose different one</span>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" required=\\\"required\\\">\\n                      <p style=\\\"color:#828282;\\\">A valid e-mail address. All e-mails from this system will be sent to this address.</p>\\n                    </div>\\n                    <button mat-raised-button type=\\\"submit\\\" class=\\\"custom\\\">Create account</button>\\n                  </form>\\n                </div>\\n              </mat-tab>\\n              <mat-tab label =\\\"Forget Password\\\">\\n                <div style=\\\"margin:20px;\\\">\\n                  <div class=\\\"alert alert-warn\\\" *ngIf=\\\"emailNotExists\\\">Email doesn't exists.</div>\\n                  <div class=\\\"alert alert-success\\\" *ngIf=\\\"forgetPasswordEmailSent\\\">Email sent.</div>\\n                  <form (ngSubmit)=\\\"onForgetPassword()\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"recoverEmail\\\">Your Email Address *</label>\\n                      <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"recoverEmail\\\" name=\\\"recoverEmail\\\" [(ngModel)]=\\\"recoverEmail\\\" required=\\\"required\\\">\\n                      <p style=\\\"color:#828282;\\\">Enter your registered address.</p>\\n                    </div>  \\n                    <button mat-raised-button type=\\\"submit\\\" class=\\\"custom\\\">Submit</button>\\n                  </form>\\n                </div>\\n              </mat-tab>\\n          </mat-tab-group>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div>\\n   \\n \\n</div>\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { LoginService } from '../../services/login.service';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../services/user.service';\nimport { UploadImageService } from '../../services/upload-image.service';\nimport { AppConst } from '../../const/app-const';\n\n@Component({\n  selector: 'app-my-account',\n  templateUrl: './my-account.component.html',\n  styleUrls: ['./my-account.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MyAccountComponent implements OnInit {\n\n  private serverPath = AppConst.serverPath;\n  private loginError:boolean =false;\n  private loggedIn=false;\n  private credential = {'username':'', 'password':''};\n  private emailSent:boolean =false;\n  private usernameExists:boolean;\n  private emailExists:boolean;\n  private username:string;\n  private recoverEmail:string;\n  private email:string;\n  private emailNotExists:boolean=false;\n  private forgetPasswordEmailSent:boolean;\n\n  constructor(private loginService: LoginService, private userService: UserService,\n   private uploadImageService: UploadImageService, private router: Router) { }\n\n  onLogin(){\n    this.loginService.sendCredential(this.credential.username, this.credential.password).subscribe(\n      res =>{\n        console.log(res);\n        localStorage.setItem(\"xAuthToken\", res.json().token);\n        this.loggedIn = true;\n        location.reload();\n        this.router.navigate(['/home']);\n      },\n      error =>{\n        this.loggedIn = false;\n        this.loginError = true;\n      }\n    );\n  }\n\n  onNewAccount(){\n    this.usernameExists = false;\n    this.emailExists = false;\n    this.emailSent = false;\n\n    this.userService.newUser(this.username, this.email).subscribe(\n      res =>{\n        this.uploadImageService.upload(JSON.parse(JSON.parse(JSON.stringify(res))._body).id);\n        console.log(res);\n        this.emailSent = true;\n      },\n      error =>{\n        console.log(error.text());\n        let errorMessage = error.text();\n        if(errorMessage === \"usernameExists\") this.usernameExists=true;\n        if(errorMessage === \"emailExists\") this.emailExists=true;\n      }\n    );\n  }\n\n  onForgetPassword(){\n    this.forgetPasswordEmailSent = false;\n    this.emailNotExists = false;\n\n    this.userService.retrievePassword(this.recoverEmail).subscribe(\n      res =>{\n        console.log(res);\n        this.forgetPasswordEmailSent = true;\n      },\n      error =>{\n        console.log(error.text());\n        let errorMessage = error.text();\n        if(errorMessage === \"Email not found\") this.emailNotExists=true;\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.loginService.checkSession().subscribe(\n      res=>{\n        this.loggedIn = true;\n      },\n      error =>{\n        this.loggedIn = false;\n      }\n    );\n  }\n\n}\n","module.exports = \"hr {\\r\\n  border: 0;\\r\\n  clear:both;\\r\\n  display:block;\\r\\n  width: 96%;               \\r\\n  background-color:#DBDBDB;\\r\\n  height: 1px;\\r\\n}\\r\\n\\r\\n#parent {\\r\\n    text-align:center;\\r\\n    background-color:blue;\\r\\n    height:400px;\\r\\n    width:600px;\\r\\n}\\r\\n\\r\\n.block {\\r\\n    height:100px;\\r\\n    width:200px;\\r\\n    text-align:left;\\r\\n}\\r\\n\\r\\n.center {\\r\\n    margin:auto;\\r\\n    background-color:green;\\r\\n}\\r\\n\\r\\n.left {\\r\\n    margin:auto auto auto 0;\\r\\n    background-color:red;\\r\\n}\\r\\n\\r\\n.right {\\r\\n    margin:auto 0 auto auto;\\r\\n    background-color:yellow;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n <app-logo spanLabel=\\\"My Profile\\\"></app-logo>\\n\\n <div *ngIf=\\\"!dataFetched\\\" style=\\\"margin-top: 50px;\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-2 col-offset-5\\\">\\n      <mat-spinner class=\\\"very-pink\\\"></mat-spinner>\\n    </div>\\n  </div>\\n </div>\\n\\n  <div class=\\\"row\\\" style=\\\"margin-top: 30px;\\\">\\n    <div class=\\\"col-3\\\"></div>\\n      <div *ngIf=\\\"dataFetched\\\">\\n        <div class=\\\"col-12\\\">\\n          <div class=\\\"panel-group\\\">\\n            <div class=\\\"panel panel-default panel-faq\\\" style=\\\"border:none;\\\">\\n              <div class=\\\"panel-body\\\" style=\\\"background-color: #ededed; margin-top:20px;\\\">\\n                <mat-tab-group dynamicHeight [selectedIndex]=\\\"selectedProfileTab\\\" class=\\\"shadow p-10 mb-12\\\">\\n                  <mat-tab label=\\\"Edit\\\">\\n                    <div style=\\\"margin: 0px 30px 30px; width: 600px;\\\">\\n                      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"incorrectPassword\\\">\\n                        <strong>Incorrect password!</strong>\\n                        Please enter the correct pasword for the current user.\\n                      </div>\\n                      <div class=\\\"alert alert-success\\\" *ngIf=\\\"updateSuccsess\\\">\\n                        <strong>Update success!</strong>\\n                      </div>\\n                    <form (ngSubmit)=\\\"onUpdateUserInfo()\\\">\\n                      <input type=\\\"hidden\\\" name=\\\"id\\\" [(ngModel)]=\\\"user.id\\\"/>\\n                      <div class=\\\"bg-info\\\" *ngIf=\\\"updateUserInfo\\\">User info updated.</div>\\n                      <div class=\\\"form-group\\\">\\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col-6\\\">\\n                            <label for=\\\"firstName\\\">First name</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"user.firstName\\\"/>\\n                          </div>\\n                          <div class=\\\"col-6\\\">\\n                            <label for=\\\"lastName\\\">Last name</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"user.lastName\\\"/>\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"username\\\">Username *</label>&nbsp;<span *ngIf=\\\"usernameExists\\\" style=\\\"color:red;\\\">Username already exists. Choose a different one.</span>\\n                        <input required=\\\"required\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\"/>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"currentPassword\\\">Current password *</label>\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"currentPassword\\\" name=\\\"currentPassword\\\" [(ngModel)]=\\\"currentPassword\\\"/><p style=\\\"color:#828282;\\\">Enter your current password to change the E-mail address or password</p>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                       <label for=\\\"email\\\">Email address *</label>&nbsp;<span *ngIf=\\\"emailExists\\\" style=\\\"color:red;\\\">Email already exists. Choose a different one.</span>\\n                       <input required=\\\"required\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\"/> <p style=\\\"color:#828282;\\\">A valid e-mail address. All e-mails from the system will be sent to this address.</p>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"txtNewPassword\\\">New password *</label>&nbsp;<span id=\\\"checkPasswordMatch\\\" style=\\\"color:red;\\\"></span>\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"txtNewPassword\\\" name=\\\"txtNewPassword\\\" [(ngModel)]=\\\"newPassword\\\"/>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"txtConfirmPassword\\\">Confirm new password *</label>\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"txtConfirmPassword\\\" name=\\\"txtConfirmPassword\\\" [(ngModel)]=\\\"newPassword\\\"/>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        Add your photo\\n                        <!-- (click)=\\\"initProfileImageModal()\\\" -->\\n                        <a mat-button ><i class=\\\"fa fa-file-image-o\\\"></i></a>\\n                      </div>\\n                      <button mat-raised-button type=\\\"submit\\\" style=\\\"align-content: center;\\\" class=\\\"custom\\\" id=\\\"updateuserInfoButton\\\">Save</button>\\n                    </form>\\n                    </div>\\n                  </mat-tab>\\n                  <mat-tab label=\\\"Orders\\\">\\n                    <div style=\\\"margin: 0px 30px 30px;\\\">\\n                    <div style=\\\"width:600px;\\\">\\n                    <div class=\\\"panel-group\\\">\\n                      <div class=\\\"panel panel-default panel-faq\\\" style=\\\"border: none;\\\">\\n                        <div class=\\\"panel-body\\\" style=\\\"background-color: #ededed; margin-top: 20px;\\\">\\n                          <table class=\\\"table table-sm table-inverse\\\">\\n                            <thead>\\n                                <tr  style=\\\"text-align: center;\\\"> \\n                                    <th>Order Date</th>\\n                                    <th>Order Number</th>\\n                                    <th>Total</th>\\n                                    <th>Status</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let order of orderList\\\"  style=\\\"text-align: center;\\\">\\n                                    <td>\\n                                        <a class=\\\"pointer\\\" (click)=\\\"onDisplayOrder(order)\\\"><span\\n                                         >{{order.orderDate}}</span></a>\\n                                    </td>\\n                                    <td>{{order.id}}</td>\\n                                    <td>{{order.orderTotal}}</td>\\n                                    <td>{{order.orderStatus}}</td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                        <div *ngIf=\\\"displayOrderDetail\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-12\\\" style=\\\"margin-bottom: 15px;\\\">\\n                                    <div class=\\\"text-center\\\">\\n                                        <h2>Order Detail for purchase #<span>{{order.id}}</span></h2>\\n                                    </div>\\n                                    <hr/>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-3\\\" style=\\\"background-color: #FFFFFF; margin: 10px;\\\">\\n                                            <div class=\\\"panel panel-default panel-faq height\\\">\\n                                                <div class=\\\"panel-heading\\\"><strong>Billing Details</strong>\\n                                                </div>\\n                                                <div class=\\\"panel-body\\\">\\n                                                    <span>{{order.billingAddress.billingAddressName}}</span>\\n                                                    <br/>\\n                                                    <span>{{order.billingAddress.billingAddressStreet1}} {{order.billingAddress.billingAddressStreet2}}</span>\\n                                                    <br/>\\n                                                    <span>{{order.billingAddress.billingAddressCity}}</span>\\n                                                    <br/>\\n                                                    <span>{{order.billingAddress.billingAddressState}}</span>\\n                                                    <br/>\\n                                                    <span>{{order.billingAddress.billingAddressZipcode}}</span>\\n                                                    <br/>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"col-3\\\" style=\\\"background-color: #FFFFFF; margin: 10px;\\\">\\n                                            <div class=\\\"panel panel-default panel-faq height\\\">\\n                                                <div class=\\\"panel-heading\\\"><strong>Payment Information</strong>\\n                                                </div>\\n                                                <div class=\\\"panel-body\\\">\\n                                                    <span>{{order.payment.holderName}}</span>\\n                                                    <br/> Visa\\n                                                    <br/>\\n                                                    <span>{{order.payment.cardNumber}}</span>\\n                                                    <br/>\\n                                                    <span>Exp Date:</span> <span>{{order.payment.expiryMonth}}</span>/<span>{{order.payment.expiryYear}}</span>\\n                                                    <br/>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"col-4\\\" style=\\\"background-color: #FFFFFF; margin: 10px;\\\">\\n                                            <div class=\\\"panel panel-default panel-faq height\\\">\\n                                                <div class=\\\"panel-heading\\\"><strong>Shipping Address</strong>\\n                                                </div>\\n                                                <div class=\\\"panel-body\\\">\\n                                                    <span>{{order.shippingAddress.shippingAddressName}}</span>\\n                                                    <br/>\\n                                                    <span>{{order.shippingAddress.shippingAddressStreet1}}' '{{order.shippingAddress.shippingAddressStreet2}}</span>\\n                                                    <br/>\\n                                                    <span>{{order.shippingAddress.shippingAddressCity}}</span>\\n                                                    <br/>\\n                                                    <span>{{order.shippingAddress.shippingAddressState}}</span>\\n                                                    <br/>\\n                                                    <span>{{order.shippingAddress.shippingAddressZipcode}}</span>\\n                                                    <br/>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-12\\\" style=\\\"background-color: #FFFFFF; margin-top: 5px;\\\">\\n                                    <div class=\\\"panel panel-default panel-faq\\\">\\n                                        <div class=\\\"panel-heading\\\">\\n                                            <h3 class=\\\"text-center\\\"><strong>Order summary</strong></h3>\\n                                        </div>\\n                                        <div class=\\\"panel-body\\\">\\n                                            <div class=\\\"table-responsive\\\">\\n                                                <table class=\\\"table table-condensed\\\">\\n                                                    <thead>\\n                                                        <tr>\\n                                                            <td><strong>Item Name</strong></td>\\n                                                            <td class=\\\"text-center\\\"><strong>Item Price</strong></td>\\n                                                            <td class=\\\"text-center\\\"><strong>Item Quantity</strong>\\n                                                            </td>\\n                                                            <td class=\\\"text-right\\\"><strong>Total</strong></td>\\n                                                        </tr>\\n                                                    </thead>\\n                                                    <tbody>\\n                                                        <tr *ngFor=\\\"let cartItem of cartItemList\\\">\\n                                                            <td>{{cartItem.book.title}}\\n                                                            </td>\\n                                                            <td class=\\\"text-center\\\">{{cartItem.book.ourPrice}}\\n                                                            </td>\\n                                                            <td class=\\\"text-center\\\">\\n                                                                {{cartItem.qty}}\\n                                                            </td>\\n                                                            <td class=\\\"text-right\\\">{{cartItem.subtotal}}\\n                                                            </td>\\n                                                        </tr>\\n                                                        <tr>\\n                                                            <td class=\\\"highrow\\\"></td>\\n                                                            <td class=\\\"highrow\\\"></td>\\n                                                            <td class=\\\"highrow text-center\\\">\\n                                                                <strong>Subtotal</strong></td>\\n                                                            <td class=\\\"highrow text-right\\\">{{order.orderTotal}}\\n                                                            </td>\\n                                                        </tr>\\n                                                        <tr>\\n                                                            <td class=\\\"emptyrow\\\"></td>\\n                                                            <td class=\\\"emptyrow\\\"></td>\\n                                                            <td class=\\\"emptyrow text-center\\\"><strong>Tax</strong>\\n                                                            </td>\\n                                                            <td class=\\\"emptyrow text-right\\\">{{order.orderTotal*0.06}}\\n                                                            </td>\\n                                                        </tr>\\n                                                        <tr>\\n                                                            <td class=\\\"emptyrow\\\"><i class=\\\"fa fa-barcode iconbig\\\"></i></td>\\n                                                            <td class=\\\"emptyrow\\\"></td>\\n                                                            <td class=\\\"emptyrow text-center\\\"><strong>Total</strong>\\n                                                            </td>\\n                                                            <td class=\\\"emptyrow text-right\\\">{{order.orderTotal*1.06}}\\n                                                            </td>\\n                                                        </tr>\\n                                                    </tbody>\\n                                                </table>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                  </mat-tab>\\n                  <mat-tab label=\\\"Payment\\\">\\n                    <div style=\\\"margin: 0px 30px 30px;\\\">\\n                        <div style=\\\"width:600px;\\\">\\n                          <p *ngIf=\\\"defaultPaymentSet\\\">Default payment set successfully!</p>\\n                          <mat-tab-group dynamicHeight (selectedIndexChange)=\\\"selectedBillingChange($event)\\\" [selectedIndex]=\\\"selectedBillingTab\\\">\\n                            <mat-tab label=\\\"List of Credit Cards\\\">\\n                              <form (ngSubmit)=\\\"setDefaultPayment()\\\" method=\\\"post\\\">\\n                                <table class=\\\"table\\\">\\n                                  <thead>\\n                                    <tr style=\\\"text-align: center;\\\">\\n                                      <th>Default</th>\\n                                      <th>Credit Card</th>\\n                                      <th>Operations</th>\\n                                    </tr>\\n                                  </thead>\\n                                  <tbody>\\n                                    <tr *ngFor=\\\"let userPayment of userPaymentList\\\" style=\\\"text-align: center;\\\">\\n                                      <td>\\n                                        <input type=\\\"radio\\\" name=\\\"defaultUserPaymentId\\\" [(ngModel)]=\\\"defaultUserPaymentId\\\" [value]=\\\"userPayment.id\\\"/>\\n                                        <span>default</span>\\n                                      </td>\\n                                      <td>{{userPayment.cardName}}</td>\\n                                      <td>\\n                                        <a mat-button (click)=\\\"onUpdatePayment(userPayment)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n                                        <a mat-button (click)=\\\"onRemovePayment(userPayment.id)\\\"><i class=\\\"fa fa-times\\\"></i></a>\\n                                      </td>\\n                                      </tr>\\n                                    </tbody>\\n                                  </table>\\n                                <button mat-raised-button class=\\\"custom\\\" type=\\\"submit\\\">Save</button>\\n                            </form>\\n                          </mat-tab>\\n                          <mat-tab label=\\\"Add(Update) Credit Card\\\">\\n                            <form (ngSubmit)=\\\"onNewPayment()\\\" method=\\\"post\\\" style=\\\"margin-top: 40px;\\\">\\n                              <div class=\\\"bg-info\\\" *ngIf=\\\"updateUserPaymentInfo\\\">User info updated.</div>\\n                              <input hidden=\\\"hidden\\\" name=\\\"id\\\" [(ngModel)]=\\\"userPayment.id\\\"/>\\n                              <div class=\\\"form-group\\\">\\n                                <h5>* Give a name for your card:</h5>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cardName\\\" placeholder=\\\"Card name\\\"\\n                                name=\\\"cardName\\\" required=\\\"required\\\" [(ngModel)]=\\\"userPayment.cardName\\\"/>\\n                              </div>\\n\\n                              <!-- Billing Address -->\\n                              <hr>\\n                              <div class=\\\"form-group\\\">\\n                                <label for=\\\"billingName\\\">* Name</label>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"billingName\\\" placeholder=\\\"Receiver name\\\" name=\\\"userBillingName\\\" required=\\\"required\\\" [(ngModel)]=\\\"userBilling.userBillingName\\\"/>\\n                              </div>\\n                              <div class=\\\"form-group\\\">\\n                                <label for=\\\"billingAddress\\\">* Street address</label>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"billingAddress\\\" placeholder=\\\"Street address 1\\\" name=\\\"userBillingStreet1\\\" required=\\\"required\\\" [(ngModel)]=\\\"userBilling.userBillingStreet1\\\"/>\\n                              </div>\\n                              <div class=\\\"form-group\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Street address 2\\\" name=\\\"userBillingStreet2\\\" [(ngModel)]=\\\"userBilling.userBillingStreet2\\\"/>\\n                              </div>\\n                              <div class=\\\"row\\\">\\n                                <div class=\\\"col-4\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                     <label for=\\\"billingCity\\\">* City</label>\\n                                     <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"billingCity\\\" placeholder=\\\"Your Billing City\\\" name=\\\"userBillingCity\\\" required=\\\"required\\\" [(ngModel)]=\\\"userBilling.userBillingCity\\\"/>\\n                                  </div>\\n                                </div>\\n                                <div class=\\\"col-4\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label for=\\\"billingState\\\">* State</label>\\n                                    <select id=\\\"billingState\\\" class=\\\"form-control\\\" name=\\\"userBillingState\\\" [(ngModel)]=\\\"userBilling.userBillingState\\\" required=\\\"=required\\\">\\n                                      <option value=\\\"\\\" disabled>-- state --</option>\\n                                      <option *ngFor=\\\"let state of stateList\\\">{{state}}</option>\\n                                    </select>\\n                                  </div>\\n                                </div>\\n                                <div class=\\\"col-4\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                     <label for=\\\"billingZipcode\\\">* Zipcode</label>\\n                                     <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"billingZipcode\\\" placeholder=\\\"Your Billing Zipcode\\\" name=\\\"userBillingZipcode\\\" required=\\\"required\\\" [(ngModel)]=\\\"userBilling.userBillingZipcode\\\"/>\\n                                  </div>\\n                                </div>\\n                              </div>\\n\\n                              <!-- User Payment -->\\n                              <br>\\n                              <div class=\\\"form-group\\\">\\n                                <h4>Credit Card Information</h4>\\n                              </div>\\n                              <div class=\\\"row\\\">\\n                                <div class=\\\"col-12\\\">\\n                                  <img src=\\\"../../../assets/image/creditcard.png\\\" class=\\\"img-responsive\\\"/>\\n                                  <br>\\n                                  <div class=\\\"form-group\\\">\\n                                    <label for=\\\"cardType\\\">* Select Card Type</label>\\n                                    <select id=\\\"cardType\\\" class=\\\"form-control\\\" name=\\\"cardType\\\" [(ngModel)]=\\\"userPayment.type\\\" required=\\\"=required\\\">\\n                                      <option value=\\\"\\\" disabled>-- Card Type --</option>\\n                                      <option value=\\\"visa\\\">Visa</option>\\n                                      <option value=\\\"mastercard\\\">Mastercard</option>\\n                                      <option value=\\\"amex\\\">Amrican Express</option>\\n                                    </select>\\n                                  </div>\\n                                  <div class=\\\"form-group\\\">\\n                                     <label for=\\\"cardHolder\\\">* Card Holder</label>\\n                                     <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cardHolder\\\" placeholder=\\\"Card holder name\\\" name=\\\"cardHolderName\\\" required=\\\"required\\\" [(ngModel)]=\\\"userPayment.holderName\\\"/>\\n                                  </div>\\n                                  <div class=\\\"form-group\\\">\\n                                    <label for=\\\"cardNumber\\\">* Card Number</label>\\n                                    <div class=\\\"input-group\\\">\\n                                      <input style=\\\"margin-right: 10px;\\\" required=\\\"required\\\" id=\\\"cardNumber\\\" type=\\\"tel\\\" class=\\\"form-control\\\" name=\\\"cardNumber\\\" placeholder=\\\"Valid Card Number\\\" [(ngModel)]=\\\"userPayment.cardNumber\\\"/>\\n                                      <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-credit-card\\\"></i></span>\\n                                    </div>\\n                                  </div>\\n                                </div>\\n                              </div>\\n                              <div class=\\\"row\\\">\\n                                <div class=\\\"col-7\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label>* Expiration Date</label>\\n                                    <div class=\\\"row\\\">\\n                                      <div class=\\\"col-6\\\">\\n                                        <select class=\\\"form-control\\\" name=\\\"expiryMonth\\\" required=\\\"required\\\" [(ngModel)]=\\\"userPayment.expiryMonth\\\">\\n                                          <option value=\\\"\\\" disabled=\\\"disabled\\\">-- Month --</option>\\n                                          <option value=\\\"1\\\">Jan (01)</option>\\n                                          <option value=\\\"2\\\">Feb (02)</option>\\n                                          <option value=\\\"3\\\">Mar (03)</option>\\n                                          <option value=\\\"4\\\">Apr (04)</option>\\n                                          <option value=\\\"5\\\">May (05)</option>\\n                                          <option value=\\\"6\\\">Jun (06)</option>\\n                                          <option value=\\\"7\\\">Jul (07)</option>\\n                                          <option value=\\\"8\\\">Aug (08)</option>\\n                                          <option value=\\\"9\\\">Sep (09)</option>\\n                                          <option value=\\\"10\\\">Oct (10)</option>\\n                                          <option value=\\\"11\\\">Nov (11)</option>\\n                                          <option value=\\\"12\\\">Dec (12)</option>\\n                                        </select>\\n                                      </div>\\n                                      <div class=\\\"col-6\\\">\\n                                        <select class=\\\"form-control\\\" name=\\\"expiryYear\\\" required=\\\"required\\\" [(ngModel)]=\\\"userPayment.expiryYear\\\">\\n                                          <option value=\\\"\\\" disabled>-- Year --</option>\\n                                          <option value=\\\"17\\\">2017</option>\\n                                          <option value=\\\"18\\\">2018</option>\\n                                          <option value=\\\"19\\\">2019</option>\\n                                          <option value=\\\"20\\\">2020</option>\\n                                          <option value=\\\"21\\\">2021</option>\\n                                          <option value=\\\"22\\\">2022</option>\\n                                          <option value=\\\"23\\\">2023</option>\\n                                          <option value=\\\"24\\\">2024</option>\\n                                          <option value=\\\"25\\\">2025</option>\\n                                        </select>\\n                                      </div>\\n                                    </div>\\n                                  </div>\\n                                </div>\\n                                <div class=\\\"col-5 pull-right\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label for=\\\"cardCVC\\\"> CV Code</label>\\n                                    <input id=\\\"cardCVC\\\" type=\\\"tel\\\" class=\\\"form-control\\\" name=\\\"cardCVC\\\" placeholder=\\\"CVC\\\" [(ngModel)]=\\\"userPayment.cvc\\\"/>\\n                                  </div>\\n                                </div>\\n                              </div>\\n                              <br>\\n                              <button mat-raised-button type=\\\"submit\\\" class=\\\"custom\\\">Save All</button>\\n                            </form>\\n                          </mat-tab>\\n                        </mat-tab-group>\\n                      </div>\\n                    </div>\\n                  </mat-tab>\\n                  <mat-tab label=\\\"Shipping\\\">\\n                    <div style=\\\"margin: 0px 30px 30px;\\\">\\n                        <div style=\\\"width:600px;\\\">\\n                          <p *ngIf=\\\"defaultShippingSet\\\">Default shipping set successfully!</p>\\n                          <mat-tab-group dynamicHeight (selectedIndexChange)=\\\"selectedShippingChange($event)\\\" [selectedIndex]=\\\"selectedShippingTab\\\">\\n                            <mat-tab label=\\\"List of Shipping Addresses\\\">\\n                              <form (ngSubmit)=\\\"setDefaultShipping()\\\" method=\\\"post\\\">\\n                                <table class=\\\"table\\\">\\n                                  <thead>\\n                                    <tr style=\\\"text-align: center;\\\">\\n                                      <th>Default</th>\\n                                      <th>Shipping Address</th>\\n                                      <th>Operations</th>\\n                                    </tr>\\n                                  </thead>\\n                                  <tbody>\\n                                    <tr *ngFor=\\\"let userShipping of userShippingList\\\" style=\\\"text-align: center;\\\">\\n                                      <td>\\n                                        <input type=\\\"radio\\\" name=\\\"defaultUserShippingId\\\" [(ngModel)]=\\\"defaultUserShippingId\\\" [value]=\\\"userShipping.id\\\"/>\\n                                        <span>default</span>\\n                                      </td>\\n                                      <td>\\n                                        {{userShipping.userShippingStreet1}},\\n                                         {{userShipping.userShippingCity}}\\n                                        {{userShipping.userShippingState}}\\n                                      </td>\\n                                      <td >\\n                                        <a mat-button (click)=\\\"onUpdateShipping(userShipping)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n                                        <a mat-button (click)=\\\"onRemoveShipping(userShipping.id)\\\"><i class=\\\"fa fa-times\\\"></i></a>\\n                                      </td>\\n                                      </tr>\\n                                    </tbody>\\n                                  </table>\\n                                <button mat-raised-button class=\\\"custom\\\" type=\\\"submit\\\">Save</button>\\n                            </form>\\n                          </mat-tab>\\n                          <mat-tab label=\\\"Add(Update) Shipping Address\\\">\\n                            <form (ngSubmit)=\\\"onNewShipping()\\\" method=\\\"post\\\" style=\\\"margin-top: 40px;\\\">\\n                              <div class=\\\"bg-info\\\" *ngIf=\\\"updateUserShippingInfo\\\">User info updated.</div>\\n                              <input hidden=\\\"hidden\\\" name=\\\"id\\\" [(ngModel)]=\\\"userShipping.id\\\"/>\\n                              <div class=\\\"form-group\\\">\\n                                <label for =\\\"shippingName\\\">* Name</label>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"shippingName\\\" placeholder=\\\"Reciever name\\\" name=\\\"shippingName\\\" required=\\\"required\\\" [(ngModel)]=\\\"userShipping.userShippingName\\\"/>\\n                              </div>\\n                              <div class=\\\"form-group\\\">\\n                                <label for=\\\"shippingAddress\\\">* Street address</label>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"shippingAddress\\\" placeholder=\\\"Street address 1\\\" name=\\\"userShippingStreet1\\\" required=\\\"required\\\" [(ngModel)]=\\\"userShipping.userShippingStreet1\\\"/>\\n                              </div>\\n                              <div class=\\\"form-group\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Street address 2\\\" name=\\\"userShippingStreet2\\\" [(ngModel)]=\\\"userShipping.userShippingStreet2\\\"/>\\n                              </div>\\n                              <div class=\\\"row\\\">\\n                                <div class=\\\"col-4\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                     <label for=\\\"ShippingCity\\\">* Shipping City</label>\\n                                     <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ShippingCity\\\" placeholder=\\\"Your Billing City\\\" name=\\\"ShippingCity\\\" required=\\\"required\\\" [(ngModel)]=\\\"userShipping.userShippingCity\\\"/>\\n                                  </div>\\n                                </div>\\n                                <div class=\\\"col-4\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                    <label for=\\\"ShippingState\\\">* Shipping State</label>\\n                                    <select id=\\\"ShippingState\\\" class=\\\"form-control\\\" name=\\\"ShippingState\\\" [(ngModel)]=\\\"userShipping.userShippingState\\\" required=\\\"=required\\\">\\n                                      <option value=\\\"\\\" disabled>-- state --</option>\\n                                      <option *ngFor=\\\"let state of stateList\\\">{{state}}</option>\\n                                    </select>\\n                                  </div>\\n                                </div>\\n                                <div class=\\\"col-4\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                     <label for=\\\"ShippingZipcode\\\">* Zipcode</label>\\n                                     <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ShippingZipcode\\\" placeholder=\\\"Zipcode\\\" name=\\\"ShippingZipcode\\\" required=\\\"required\\\" [(ngModel)]=\\\"userShipping.userShippingZipcode\\\"/>\\n                                  </div>\\n                                </div>\\n                              </div>\\n                             \\n                              <br>\\n                              <button mat-raised-button type=\\\"submit\\\" class=\\\"custom\\\">Save All</button>\\n                            </form>\\n                          </mat-tab>\\n                        </mat-tab-group>\\n                      </div>\\n                    </div>\\n                  </mat-tab>\\n                </mat-tab-group>\\n              </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AppConst } from '../../const/app-const';\nimport { UserService } from '../../services/user.service';\nimport { LoginService } from '../../services/login.service';\nimport { User } from '../../models/user';\nimport { Router } from '@angular/router';\nimport { PaymentService } from '../../services/payment.service';\nimport { UserPayment } from '../../models/user-payment';\nimport { UserBilling } from '../../models/user-billing';\nimport { UserShipping } from '../../models/user-shipping';\nimport { ShippingService } from '../../services/shipping.service';\nimport { Order } from '../../models/order';\nimport { OrderService } from '../../services/order.service';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.css']\n})\nexport class MyProfileComponent implements OnInit {\n\n  private serverPath = AppConst.serverPath;\n  private dataFetched = false;\n  private loginError:boolean;\n  private loggedIn:boolean;\n  private credential = {'username':'', 'password':''};\n  private user: User = new User();\n  private updateSuccsess:boolean;\n  private newPassword:string;\n  private incorrectPassword:boolean;\n  private currentPassword: string;\n\n  private selectedProfileTab: number = 0;\n  private selectedBillingTab: number = 0;\n  private selectedShippingTab : number =0;\n\n  private userPayment: UserPayment = new UserPayment();\n  private userBilling: UserBilling = new UserBilling();\n  private userPaymentList: UserPayment[] = [];\n  private defaultPaymentSet: boolean;\n  private defaultUserPaymentId: number;\n  private stateList: string [] = [];\n\n  private userShipping: UserShipping = new UserShipping();\n  private userShippingList: UserShipping[] = [];\n\n  private defaultUserShippingId: number;\n  private defaultShippingSet: boolean;\n\n  private orderList: Order[] = [];\n  private order: Order = new Order();\n  private displayOrderDetail: boolean;\n\n\n  constructor(private loginService: LoginService, private userService: UserService,\n   private paymentService: PaymentService, private shippingService: ShippingService,\n    private orderService: OrderService, private router:Router) { }\n\n  selectedShippingChange(val: number) {\n    this.selectedShippingTab = val;\n  }\n\n  selectedBillingChange(val: number){\n    this.selectedBillingTab = val;\n  }\n\n  onUpdateUserInfo(){\n    this.userService.updateUserInfo(this.user, this.newPassword, this.currentPassword).subscribe(\n      res => {\n        console.log(res.text());\n        this.updateSuccsess = true;\n      },\n      error => {\n        console.log(error.text());\n        if(error.text() === \"Incorrect current password!\")this.incorrectPassword = true;\n      }\n    );\n  }\n\n  onNewPayment(){\n    this.paymentService.newPayment(this.userPayment).subscribe(\n       res => {\n         this.getCurrentUser();\n         this.selectedBillingTab = 0;\n         this.userPayment = new UserPayment();\n       },\n       error => {\n         console.log(error.text());\n       }\n    );\n  }\n\n  onUpdatePayment(payment: UserPayment){\n    this.userPayment = payment;\n    this.userBilling = payment.userBilling;\n    this.selectedBillingTab = 1;\n  }\n\n  onRemovePayment(id:number){\n    this.paymentService.removePayment(id).subscribe(\n       res => {\n         this.getCurrentUser();\n       },\n       error => {\n         console.log(error.text());\n       }\n    );\n  }\n\n  setDefaultPayment(){\n    this.defaultPaymentSet = false;\n    this.paymentService.setDefaultPayment(this.defaultUserPaymentId).subscribe(\n       res => {\n         this.getCurrentUser();\n         this.defaultPaymentSet = true;\n       },\n       error => {\n         console.log(error.text());\n       }\n    );\n  }\n\n  onNewShipping(){\n    this.shippingService.newShipping(this.userShipping).subscribe(\n      res => {\n        this.getCurrentUser();\n        this.selectedShippingTab = 0;\n        this.userShipping = new UserShipping();\n      },\n      error => {\n        console.log(error.text());\n      }\n    );\n  }\n\n  onUpdateShipping(shipping: UserShipping){\n    this.userShipping = shipping;\n    this.selectedShippingTab = 1;\n  }\n\n  onRemoveShipping(id: number){\n    this.shippingService.removeShipping(id).subscribe(\n      res => {\n        this.getCurrentUser();\n      },\n      error => {\n        console.log(error.text());\n      }\n    );\n  }\n\n  setDefaultShipping(){\n    this.defaultShippingSet = false;\n    this.shippingService.setDefaultShipping(this.defaultUserShippingId).subscribe(\n      res => {\n        this.getCurrentUser();\n        this.defaultShippingSet = true;\n      },\n      error => {\n        console.log(error.text());\n      }\n    );\n  }\n\n   getCurrentUser(){\n    this.userService.getCurrentUser().subscribe(\n      res=> {\n        this.user = res.json();\n        this.userPaymentList = this.user.userPaymentList;\n        this.userShippingList = this.user.userShippingList;\n\n        for(let index in this.userPaymentList){\n          if(this.userPaymentList[index].defaultPayment){\n            this.defaultUserPaymentId=this.userPaymentList[index].id;\n            break;\n          }\n        }\n\n        for(let index in this.userShippingList) {\n          if(this.userShippingList[index].userShippingDefault) {\n            this.defaultUserShippingId=this.userShippingList[index].id;\n            break;\n          }\n        }\n\n        this.dataFetched = true;\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  onDisplayOrder(order: Order){\n    console.log(order);\n    this.order = order;\n    this.displayOrderDetail = true;\n  }\n\n  ngOnInit() {\n   this.loginService.checkSession().subscribe(\n     res => {\n      this.loggedIn = true;\n     },\n     error =>{\n      this.loggedIn = false;\n      console.log(\"inactive session\");\n      this.router.navigate(['/myAccount']);\n     }\n  );\n\n    this.getCurrentUser();\n    this.orderService.getOrderList().subscribe(\n      res => {\n        this.orderList = res.json();\n      },\n      error => {\n        console.log(error.text());\n      }\n    );\n\n    for(let s in AppConst.usStates){\n      this.stateList.push(s);\n    }\n    this.userBilling.userBillingState = \"\";\n    this.userPayment.type = \"\";\n    this.userPayment.expiryMonth = \"\";\n    this.userPayment.expiryYear = \"\";\n    this.userPayment.userBilling = this.userBilling;\n    this.defaultPaymentSet = false;\n\n    this.userShipping.userShippingState = \"\";\n    this.defaultShippingSet = false;\n  }\n}\n","module.exports = \"/*customize navbar*/\\r\\n\\r\\n.navbar-default {\\r\\n    background-color: #EF6C00;\\r\\n    border-color: #EF6C00;\\r\\n}\\r\\n\\r\\n/* Title */\\r\\n\\r\\n.navbar-default .navbar-brand {\\r\\n   color: white;\\r\\n   text-decoration: none;\\r\\n   transition: color 0.3s linear;\\r\\n   -webkit-transition: color 0.3s linear;\\r\\n   -moz-transition: color 0.3s linear;\\r\\n   font-weight: bold;\\r\\n   color: #DADADA;\\r\\n}\\r\\n\\r\\n.navbar-default .navbar-brand:hover,\\r\\n.navbar-default .navbar-brand:focus {\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n/* Link */\\r\\n\\r\\n.navbar-default .navbar-nav > li > a {\\r\\n text-decoration: none;\\r\\n transition: color 0.3s linear;\\r\\n -webkit-transition: color 0.3s linear;\\r\\n -moz-transition: color 0.3s linear;\\r\\n  padding-top: 10px;\\r\\n  color: #DADADA;\\r\\n  margin-left:30px;\\r\\n}\\r\\n\\r\\n.navbar-default .navbar-nav > li > a:hover,\\r\\n.navbar-default .navbar-nav > li > a:focus {\\r\\n    color: white;\\r\\n\\r\\n}\\r\\n\\r\\n.navbar-default .navbar-nav > .active > a,\\r\\n.navbar-default .navbar-nav > .active > a:hover,\\r\\n.navbar-default .navbar-nav > .active > a:focus {\\r\\n    color: #555;\\r\\n    background-color: #E7E7E7;\\r\\n}\\r\\n\\r\\n.navbar-default .navbar-nav > .open > a,\\r\\n.navbar-default .navbar-nav > .open > a:hover,\\r\\n.navbar-default .navbar-nav > .open > a:focus {\\r\\n    color: #555;\\r\\n    background-color: #D5D5D5;\\r\\n}\\r\\n\\r\\n.form-control{\\r\\n  margin-right: 10px;\\r\\n  margin-left: 10px;\\r\\n}\\r\\n\\r\\n/*styles for the button*/\\r\\n\\r\\n.btn:focus, .btn:active:focus, .btn.active:focus {\\r\\n    outline: 0 none;\\r\\n}\\r\\n\\r\\n.btn-outline-warning {\\r\\n    background: #f46b42;\\r\\n    border-color: #f46b42;\\r\\n    color: #DADADA;\\r\\n}\\r\\n\\r\\n.btn-outline-warning:hover, .btn-outline-warning:focus, .btn-outline-warning:active, .btn-outline-warning.active, .open > .dropdown-toggle.btn-outline-warnin {\\r\\n    background: #ff805b;\\r\\n    border-color: #f46b42;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.btn-outline-warning:active, .btn-outline-warning.active {\\r\\n    background: #007299;\\r\\n    box-shadow: none;\\r\\n}\"","module.exports = \"<div class=\\\"page-top\\\" style=\\\"width: 100%; height: 10px; background-color: #E65100\\\"></div>\\n\\n<nav class=\\\"shadow p-10 mb-5 navbar navbar-expand-lg navbar-default\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand pointer\\\" routerLink=\\\"/home\\\">DOM'S BOOKSTORE</a>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li *ngIf=\\\"!loggedIn\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/myAccount\\\">MY ACCOUNT</a>\\n        </li>\\n        <li *ngIf=\\\"loggedIn\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/shoppingCart\\\">SHOPPING CART</a>\\n        </li>\\n        <li *ngIf=\\\"loggedIn\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/myProfile\\\">{{username}}</a>\\n        </li>\\n        <li *ngIf=\\\"loggedIn\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link pointer\\\" (click)=\\\"logout()\\\">LOGOUT</a>\\n        </li>\\n\\n      </ul>\\n          \\n        <form (ngSubmit)=\\\"onSearchByTitle()\\\" class=\\\"form-inline my-2 my-lg-0\\\">\\n          <ul class=\\\"navbar-nav mr-auto\\\">\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/bookList\\\">BOOK</a>\\n            </li>\\n            \\n          </ul>\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" name=\\\"searchByTitle\\\" [(ngModel)]=\\\"keyword\\\" class=\\\"form-control\\\" placeholder=\\\"Book title\\\">\\n          </div>\\n          <button class=\\\"btn btn-outline-warning my-2 my-sm-0\\\" type=\\\"submit\\\">SEARCH</button>\\n        </form>\\n        \\n    </div>\\n  </div>\\n</nav>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../../services/login.service';\nimport { BookService } from '../../services/book.service';\nimport { UserService } from '../../services/user.service';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { Book } from '../../models/book';\nimport { User } from '../../models/user';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  private loggedIn = false;\n  private keyword: string;\n  private bookList: Book[] = [];\n  private user: User = new User();\n  private username: string;\n\n  constructor(private loginService: LoginService, private bookService: BookService,\n   private userService: UserService, private router: Router) { }\n\n  logout(){\n    this.loginService.logout().subscribe(\n      res =>{\n        this.loggedIn = false;\n        this.router.navigate(['/home']);\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  onSearchByTitle(){\n    this.bookService.searchBook(this.keyword).subscribe(\n      res => {\n        this.bookList = res.json();\n\n        let navigationExtras: NavigationExtras = {\n          queryParams: {\n            \"bookList\" : JSON.stringify(this.bookList)\n          }\n        };\n\n        this.router.navigate(['/bookList'], navigationExtras);\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.loginService.checkSession().subscribe(\n      res =>{\n        console.log(res);\n        this.loggedIn = true;\n\n        this.userService.getCurrentUser().subscribe(\n         res=> {\n           this.user = res.json();\n           this.username = this.user.username.toUpperCase();\n         },\n         error => {\n           console.log(error);\n         }\n       );\n\n      },\n      error =>{\n        console.log(error);\n        this.loggedIn = false;\n      }\n    );\n  }\n\n}\n","module.exports = \"hr {\\r\\n  border: 0;\\r\\n  clear:both;\\r\\n  display:block;\\r\\n  width: 96%;               \\r\\n  background-color:#DBDBDB;\\r\\n  height: 1px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n <app-logo spanLabel=\\\"Order Summary\\\"></app-logo>\\n\\n <div class=\\\"row\\\" style=\\\"margin-top: 40px;\\\">\\n  <div class=\\\"col-12\\\">\\n   <div class=\\\"alert alert-success\\\">\\n     <h3><i class=\\\"fa fa-check\\\" style=\\\"color: limegreen;\\\"></i> Thank you, your order has been placed.</h3>\\n     <h4>The estimated delivery date is <span>{{estimatedDeliveryDate}}</span></h4>\\n   </div>\\n  </div>\\n </div>\\n    <br>\\n    <h3>List of Items</h3>\\n   <div class=\\\"row\\\" *ngFor=\\\"let cartItem of cartItemList\\\" style=\\\"margin-bottom: 40px;\\\">  \\n      <hr/>\\n      <div class=\\\"col-2\\\">\\n          <a (click)=\\\"onSelect(cartItem.book)\\\"><img class=\\\"img-responsive pointer\\\" src=\\\"{{serverPath}}/image/book/{{cartItem.book.id}}.png\\\" style=\\\"width:100px;\\\" /></a>\\n        </div>\\n      <div class=\\\"col-6\\\">\\n        <a class=\\\"pointer\\\" (click)=\\\"onSelect(cartItem.book)\\\"><h4>{{cartItem.book.title}}</h4></a>\\n        <p *ngIf=\\\"cartItem.book.inStockNumber>10\\\" style=\\\"color:green;\\\">In Stock</p>\\n        <p *ngIf=\\\"cartItem.book.inStockNumber<10\\\" style=\\\"color:brown;\\\">Only <span>{{cartItem.book.inStockNumber}}</span> In Stock</p>\\n        <p *ngIf=\\\"cartItem.book.inStockNumber == 0\\\" style=\\\"color:darkred;\\\">Out of Stock</p>\\n        <a class=\\\"pointer\\\" (click)=\\\"onRemoveCartItem(cartItem)\\\">Delete</a>\\n      </div>\\n      <div class=\\\"col-2\\\">\\n        <!-- ngClass attaches a class to this element based on a condition. In this case we attach the text strike to it -->\\n        <h5 style=\\\"color: #db3208; font-size: large;\\\">$<span [ngClass]=\\\"{'text-strike': cartItem.book.inStockNumber == 0}\\\">{{cartItem.book.ourPrice}}</span></h5>\\n      </div>\\n      <div class=\\\"col-2 text-center\\\">\\n        <h5 style=\\\"font-size: large;\\\">{{cartItem.qty}}</h5>\\n      </div>\\n    </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AppConst } from '../../const/app-const';\nimport { Params, ActivatedRoute, Router } from '@angular/router';\nimport { CheckoutService } from '../../services/checkout.service';\nimport { Order } from '../../models/order';\nimport { CartItem } from '../../models/cart-item';\n\n\n@Component({\n  selector: 'app-order-summary',\n  templateUrl: './order-summary.component.html',\n  styleUrls: ['./order-summary.component.css']\n})\nexport class OrderSummaryComponent implements OnInit {\n  private serverPath = AppConst.serverPath;\n  private order:Order = new Order();\n  private estimatedDeliveryDate: string;\n  private cartItemList: CartItem[] = [];\n\n  constructor(\n    private checkoutService: CheckoutService,\n    private route: ActivatedRoute,\n    private router: Router\n    ) { }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.order = JSON.parse(params['order']);\n\n      let deliveryDate = new Date();\n\n      if(this.order.shippingMethod==\"groundShipping\") {\n        deliveryDate.setDate(deliveryDate.getDate()+5);\n      } else {\n        deliveryDate.setDate(deliveryDate.getDate()+3);\n      }\n\n      let days=[\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      this.estimatedDeliveryDate = days[deliveryDate.getDay()]+', '\n      +deliveryDate.getFullYear()+'/'+deliveryDate.getMonth()+'/'+deliveryDate.getDate();\n\n\n      this.cartItemList = this.order.cartItemList;\n    });\n  }\n\n}\n","module.exports = \"hr {\\r\\n  border: 0;\\r\\n  clear:both;\\r\\n  display:block;\\r\\n  width: 96%;               \\r\\n  background-color:#DBDBDB;\\r\\n  height: 1px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n <app-logo spanLabel=\\\"Checkout\\\"></app-logo>\\n\\n <div class=\\\"row\\\" style=\\\"margin-top: 40px;\\\">\\n  <div class=\\\"col-4\\\">\\n    <form (ngSubmit)=\\\"onSubmit()\\\" method=\\\"post\\\">\\n      <div class=\\\"panel panel-default panel-faq\\\"> \\n        <div class=\\\"panel-body shadow p-10 mb-12\\\" style=\\\"padding: 20px;\\\">\\n          <button mat-raised-button type=\\\"submit \\\" class=\\\"btn-block custom\\\">Place your order\\n          </button>\\n          <p style=\\\"font-size: smaller; margin-top: 10px;\\\">By placing your order, you agree to Le's Bookstore <a href=\\\"#\\\">privacy</a> notice and\\n              <a href=\\\"#\\\">conditions</a> of use.</p>\\n          <hr/>\\n          <h3>Order Summary</h3>\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-7 text-left\\\">\\n                  Total before tax:\\n              </div>\\n              <div class=\\\"col-5 text-right\\\">\\n                  $\\n                  <span>{{shoppingCart.grandTotal}}</span>\\n              </div>\\n          </div>\\n          <div class=\\\"row \\\">\\n              <div class=\\\"col-7 text-left \\\">\\n                  Estimated tax:\\n              </div>\\n              <div class=\\\"col-5 text-right \\\">\\n                  $<span>{{shoppingCart.grandTotal*0.06 | number : '1.2-2'}}</span>\\n              </div>\\n          </div>\\n          <hr />\\n          <div class=\\\"row \\\">\\n              <div class=\\\"col-7 text-left \\\">\\n                  <h3 style=\\\"color:darkred; \\\"><strong>Order total:</strong></h3>\\n              </div>\\n              <div class=\\\"col-5 text-right \\\">\\n                  <h3><strong style=\\\"color:darkred; \\\">$<span\\n                          >{{shoppingCart.grandTotal*1.06 | number : '1.2-2'}}</span>\\n                  </strong></h3>\\n              </div>\\n          </div>\\n          <div class=\\\"panel-footer\\\">Shipping and handling haven't applied.</div>\\n        </div>\\n      </div>\\n    </form>\\n    </div>\\n   <div class=\\\"col-8\\\" style=\\\"margin-top: 15px;\\\">\\n    <form (ngSubmit)=\\\"onSubmit()\\\" method=\\\"post\\\">\\n     <div *ngIf=\\\"missingRequiredField\\\">\\n       <h5 class=\\\"alert alert-warning\\\">There are some fields missing. Field with * is required.</h5>\\n     </div>\\n     <mat-tab-group dynamicHeight (selectedIndexChange)=\\\"selectedChange($event)\\\" [selectedIndex]=\\\"selectedTab\\\"\\n     class=\\\"shadow p-10 mb-12\\\" style=\\\"padding: 20px;\\\">\\n       <!-- 1. Shipping address -->\\n       <mat-tab label=\\\"1. Shipping Address\\\">\\n         <div class=\\\"panel panel-default\\\">\\n           <div class=\\\"panel-heading\\\">\\n             <h4 class=\\\"panel-title\\\" style=\\\"margin-top: 10px;\\\">\\n               1. Shipping Address\\n             </h4>\\n           </div>\\n           <div class=\\\"panel-body\\\">\\n             <table class=\\\"table\\\" *ngIf=\\\"!emptyShippingList\\\">\\n               <thead>\\n                 <tr>\\n                   <th>Available Shipping Address</th>\\n                   <th>Operation</th>\\n                 </tr>\\n               </thead>\\n               <tbody>\\n                 <tr *ngFor=\\\"let userShipping of userShippingList\\\">\\n                   <td>\\n                     {{userShipping.userShippingStreet1}},\\n                     {{userShipping.userShippingStreet2}},\\n                     {{userShipping.userShippingCity}},\\n                     {{userShipping.userShippingState}}\\n                   </td>\\n                   <td>\\n                     <a class=\\\"pointer\\\" (click)=\\\"setShippingAddress(userShipping)\\\">Use this address</a>\\n                   </td>\\n                 </tr>\\n               </tbody>\\n             </table>\\n\\n             <div class=\\\"form-group\\\">\\n               <label for =\\\"shippingAddressName\\\">* Name</label>\\n               <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"shippingName\\\" placeholder=\\\"Reciever name\\\" name=\\\"shippingAddressName\\\" required=\\\"required\\\" [(ngModel)]=\\\"shippingAddress.shippingAddressName\\\" />\\n             </div>\\n             <div class=\\\"form-group\\\">\\n              <label for=\\\"shippingAddress\\\">* Street address</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"shippingAddress\\\" placeholder=\\\"Street address 1\\\" name=\\\"ShippingAddressStreet1\\\" required=\\\"required\\\" [(ngModel)]=\\\"shippingAddress.shippingAddressStreet1\\\"/>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Street address 2\\\" name=\\\"ShippingAddressStreet2\\\" [(ngModel)]=\\\"shippingAddress.shippingAddressStreet2\\\"/>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4\\\">\\n                <div class=\\\"form-group\\\">\\n                   <label for=\\\"ShippingCity\\\">* Shipping City</label>\\n                   <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ShippingCity\\\" placeholder=\\\"Your Billing City\\\" name=\\\"ShippingCity\\\" required=\\\"required\\\" [(ngModel)]=\\\"shippingAddress.shippingAddressCity\\\"/>\\n                </div>\\n              </div>\\n              <div class=\\\"col-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"ShippingState\\\">* Shipping State</label>\\n                  <select id=\\\"ShippingState\\\" class=\\\"form-control\\\" name=\\\"ShippingState\\\" [(ngModel)]=\\\"shippingAddress.shippingAddressState\\\" required=\\\"=required\\\">\\n                    <option value=\\\"\\\" disabled>-- state --</option>\\n                    <option *ngFor=\\\"let state of stateList\\\">{{state}}</option>\\n                  </select>\\n                </div>\\n              </div>\\n              <div class=\\\"col-4\\\">\\n                <div class=\\\"form-group\\\">\\n                   <label for=\\\"ShippingZipcode\\\">* Zipcode</label>\\n                   <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ShippingZipcode\\\" placeholder=\\\"Zipcode\\\" name=\\\"ShippingZipcode\\\" required=\\\"required\\\" [(ngModel)]=\\\"shippingAddress.shippingAddressZipcode\\\"/>\\n                </div>\\n              </div>\\n            </div>\\n            <a mat-raised-button class=\\\"custom\\\" (click)=\\\"goToPayment()\\\">Next</a>\\n           </div>\\n         </div>\\n       </mat-tab>\\n\\n       <!-- 2. Payment Information -->\\n       <mat-tab label=\\\"2. Payment Information\\\">\\n        <div class=\\\"panel panel-default panel-faq\\\">\\n          <div class=\\\"panel-heading\\\">\\n            <h4 class=\\\"panel-title\\\" style=\\\"margin-top: 10px;\\\">\\n              2. Payment Information\\n            </h4>\\n          </div>\\n\\n         <div class=\\\"panel-body\\\">\\n           <table class=\\\"table\\\" *ngIf=\\\"!emptyPaymentList\\\">\\n             <thead>\\n               <tr>\\n                 <th>Available Credit Card</th>\\n                 <th>Operation</th>\\n               </tr>\\n             </thead>\\n             <tbody>\\n               <tr *ngFor=\\\"let userPayment of userPaymentList\\\">\\n                 <td>\\n                   {{userPayment.cardName}}\\n                 </td>\\n                 <td>\\n                   <a class=\\\"pointer\\\" (click)=\\\"setPaymentMethod(userPayment)\\\">Use this payment method</a>\\n                 </td>\\n               </tr>\\n             </tbody>\\n           </table>\\n\\n           <!-- Credit card Informarion -->\\n           <div class=\\\"row\\\">\\n              <div class=\\\"col-12\\\">\\n                <img src=\\\"../../../assets/image/creditcard.png\\\" class=\\\"img-fluid\\\"/>\\n                <br>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"cardType\\\">* Select card Type</label>\\n                  <select id=\\\"cardType\\\" class=\\\"form-control\\\" name=\\\"cardType\\\" [(ngModel)]=\\\"userPayment.type\\\" required=\\\"=required\\\">\\n                    <option value=\\\"\\\" disabled>-- card Type --</option>\\n                    <option value=\\\"visa\\\">Visa</option>\\n                    <option value=\\\"masterpanel\\\">Masterpanel</option>\\n                    <option value=\\\"amex\\\">Amrican Express</option>\\n                  </select>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                   <label for=\\\"cardHolder\\\">* card Holder</label>\\n                   <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cardHolder\\\" placeholder=\\\"card holder name\\\" name=\\\"cardHolderName\\\" required=\\\"required\\\" [(ngModel)]=\\\"payment.holderName\\\"/>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"cardNumber\\\">* card Number</label>\\n                  <div class=\\\"input-group\\\">\\n                    <input style=\\\"margin-right: 10px;\\\" required=\\\"required\\\" id=\\\"cardNumber\\\" type=\\\"tel\\\" class=\\\"form-control\\\" name=\\\"cardNumber\\\" placeholder=\\\"Valid card Number\\\" [(ngModel)]=\\\"payment.cardNumber\\\"/>\\n                    <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-credit-card\\\"></i></span>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-7\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>* Expiration Date</label>\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-6\\\">\\n                      <select class=\\\"form-control\\\" name=\\\"expiryMonth\\\" required=\\\"required\\\" [(ngModel)]=\\\"payment.expiryMonth\\\">\\n                        <option value=\\\"\\\" disabled=\\\"disabled\\\">-- Month --</option>\\n                        <option value=\\\"1\\\">Jan (01)</option>\\n                        <option value=\\\"2\\\">Feb (02)</option>\\n                        <option value=\\\"3\\\">Mar (03)</option>\\n                        <option value=\\\"4\\\">Apr (04)</option>\\n                        <option value=\\\"5\\\">May (05)</option>\\n                        <option value=\\\"6\\\">Jun (06)</option>\\n                        <option value=\\\"7\\\">Jul (07)</option>\\n                        <option value=\\\"8\\\">Aug (08)</option>\\n                        <option value=\\\"9\\\">Sep (09)</option>\\n                        <option value=\\\"10\\\">Oct (10)</option>\\n                        <option value=\\\"11\\\">Nov (11)</option>\\n                        <option value=\\\"12\\\">Dec (12)</option>\\n                      </select>\\n                    </div>\\n                    <div class=\\\"col-6\\\">\\n                      <select class=\\\"form-control\\\" name=\\\"expiryYear\\\" required=\\\"required\\\" [(ngModel)]=\\\"payment.expiryYear\\\">\\n                        <option value=\\\"\\\" disabled>-- Year --</option>\\n                        <option value=\\\"17\\\">2017</option>\\n                        <option value=\\\"18\\\">2018</option>\\n                        <option value=\\\"19\\\">2019</option>\\n                        <option value=\\\"20\\\">2020</option>\\n                        <option value=\\\"21\\\">2021</option>\\n                        <option value=\\\"22\\\">2022</option>\\n                        <option value=\\\"23\\\">2023</option>\\n                        <option value=\\\"24\\\">2024</option>\\n                        <option value=\\\"25\\\">2025</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-5 pull-right\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"panelCVC\\\"> CVC Code</label>\\n                  <input id=\\\"panelCVC\\\" type=\\\"tel\\\" class=\\\"form-control\\\" name=\\\"panelCVC\\\" placeholder=\\\"CVC\\\" [(ngModel)]=\\\"payment.cvc\\\"/>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"checkbox\\\">\\n              <label>\\n                <input id=\\\"theSameAsShippingAddress\\\" type=\\\"checkbox\\\" name=\\\"billingSameAsShipping\\\" value=\\\"true\\\" (click)=\\\"setBillingAsShipping($event.target.checked)\\\"/>The same as shipping address.\\n              </label>\\n            </div>\\n\\n            <!-- billing address -->\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"billingName\\\">* Name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"billingName\\\" placeholder=\\\"Receiver name\\\" name=\\\"billingAddressName\\\" required=\\\"required\\\" [(ngModel)]=\\\"billingAddress.billingAddressName\\\"/>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"billingAddress\\\">* Street address</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"billingAddress\\\" placeholder=\\\"Street address 1\\\" name=\\\"billingAddressStreet1\\\" required=\\\"required\\\" [(ngModel)]=\\\"billingAddress.billingAddressStreet1\\\"/>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Street address 2\\\" name=\\\"billingAddressStreet2\\\" [(ngModel)]=\\\"billingAddress.billingAddressStreet2\\\"/>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-4\\\">\\n                <div class=\\\"form-group\\\">\\n                   <label for=\\\"billingCity\\\">* City</label>\\n                   <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"billingCity\\\" placeholder=\\\"Your Billing City\\\" name=\\\"billingAddressCity\\\" required=\\\"required\\\" [(ngModel)]=\\\"billingAddress.billingAddressCity\\\"/>\\n                </div>\\n              </div>\\n              <div class=\\\"col-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"billingState\\\">* State</label>\\n                  <select id=\\\"billingState\\\" class=\\\"form-control\\\" name=\\\"billingAddressState\\\" [(ngModel)]=\\\"billingAddress.billingAddressState\\\" required=\\\"=required\\\">\\n                    <option value=\\\"\\\" disabled>-- state --</option>\\n                    <option *ngFor=\\\"let state of stateList\\\">{{state}}</option>\\n                  </select>\\n                </div>\\n              </div>\\n              <div class=\\\"col-4\\\">\\n                <div class=\\\"form-group\\\">\\n                   <label for=\\\"billingZipcode\\\">* Zipcode</label>\\n                   <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"billingZipcode\\\" placeholder=\\\"Your Billing Zipcode\\\" name=\\\"billingAddressZipcode\\\" required=\\\"required\\\" [(ngModel)]=\\\"billingAddress.billingAddressZipcode\\\"/>\\n                </div>\\n              </div>\\n            </div>\\n            <a mat-raised-button class=\\\"custom\\\" (click)=\\\"goToReview()\\\">Next</a>\\n          </div>\\n        </div>\\n       </mat-tab>\\n\\n       <!-- 3. Review Items and Shipping -->\\n       <mat-tab label=\\\"3. Review\\\">\\n         <div class=\\\"panel panel-default panel-faq\\\">\\n           <div class=\\\"panel-heading\\\">\\n             <h4 class=\\\"panel-title\\\" style=\\\"margin-top: 10px;\\\">\\n               3. Review Items and Shipping and Choose your shipping method:\\n             </h4>\\n           </div>\\n           <div class=\\\"panel-body\\\">\\n             <div class=\\\"radio\\\">\\n               <label>\\n                 <input type=\\\"radio\\\" name=\\\"shippingMethod\\\" value=\\\"groundShipping\\\" [(ngModel)]=\\\"shippingMethod\\\" />\\n                 Ground Shipping\\n               </label>\\n             </div>\\n             <div class=\\\"radio\\\">\\n               <label>\\n                 <input type=\\\"radio\\\" name=\\\"shippingMethod\\\" value=\\\"premiumShipping\\\" [(ngModel)]=\\\"shippingMethod\\\" />\\n                 Premium Shipping\\n               </label>\\n             </div>\\n\\n             <div class=\\\"row\\\">\\n               <div class=\\\"col-8\\\">\\n                 <h4>Products</h4>\\n               </div>\\n               <div class=\\\"col-2\\\">\\n                 <h4>Price</h4>\\n               </div>\\n               <div class=\\\"col-2\\\">\\n                 <h4>Quantity</h4>\\n               </div>\\n             </div>\\n\\n             <!-- display products -->\\n             <div class=\\\"row\\\" *ngFor=\\\"let cartItem of cartItemList\\\" style=\\\"margin-bottom: 10px;\\\">\\n               <hr />\\n               <div class=\\\"col-2\\\">\\n                  <a (click)=\\\"onSelect(cartItem.book)\\\"><img class=\\\"img-responsive pointer\\\" src=\\\"{{serverPath}}/image/book/{{cartItem.book.id}}.png\\\" style=\\\"width:100px;\\\" /></a>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                  <a class=\\\"pointer\\\" (click)=\\\"onSelect(cartItem.book)\\\"><h4>{{cartItem.book.title}}</h4></a>\\n                  <p *ngIf=\\\"cartItem.book.inStockNumber>10\\\" style=\\\"color:green;\\\">In Stock</p>\\n                  <p *ngIf=\\\"cartItem.book.inStockNumber<10\\\" style=\\\"color:brown;\\\">Only <span>{{cartItem.book.inStockNumber}}</span> In Stock</p>\\n                  <p *ngIf=\\\"cartItem.book.inStockNumber == 0\\\" style=\\\"color:darkred;\\\">Out of Stock</p>\\n                  <a class=\\\"pointer\\\" (click)=\\\"onRemoveCartItem(cartItem)\\\">Delete</a>\\n                </div>\\n                <div class=\\\"col-2\\\">\\n                  <!-- ngClass attaches a class to this element based on a condition. In this case we attach the text strike to it -->\\n                  <h5 style=\\\"color: #db3208; font-size: large;\\\">$<span [ngClass]=\\\"{'text-strike': cartItem.book.inStockNumber == 0}\\\">{{cartItem.book.ourPrice}}</span></h5>\\n                </div>\\n                <div class=\\\"col-2 text-center\\\">\\n                  <h5 style=\\\"font-size: large;\\\">{{cartItem.qty}}</h5>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <h4 class=\\\"col-12 text-right\\\"><strong style=\\\"font-size: large\\\">Total Price (<span>{{cartItemNumber}}</span> items):</strong><span style=\\\"color: #db3208; font-size: large\\\">$<span>{{shoppingCart.grandTotal}}</span></span></h4>\\n                <br/><br/>\\n                <button mat-raised-button type=\\\"submit\\\" class=\\\"btn-block custom\\\">Place your order</button>\\n              </div>\\n             </div>\\n           </div>\\n       </mat-tab>\\n     </mat-tab-group>\\n   </form>\\n   </div>\\n </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AppConst } from '../../const/app-const';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { Book } from '../../models/book';\nimport { CartService } from '../../services/cart.service';\nimport { ShoppingCart } from '../../models/shopping-cart';\nimport { CartItem } from '../../models/cart-item';\nimport { ShippingService } from '../../services/shipping.service';\nimport { PaymentService } from '../../services/payment.service';\nimport { CheckoutService } from '../../services/checkout.service';\nimport { ShippingAddress } from '../../models/shipping-address';\nimport { BillingAddress} from '../../models/billing-address';\nimport { UserPayment } from '../../models/user-payment';\nimport { UserBilling } from '../../models/user-billing';\nimport { UserShipping } from '../../models/user-shipping';\nimport { Payment } from '../../models/payment';\nimport { Order } from '../../models/order';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit {\n\n  private serverPath = AppConst.serverPath;\n  private selectedBook: Book;\n  private cartItemList: CartItem[] = [];\n  private cartItemNumber: number;\n  private shoppingCart: ShoppingCart = new ShoppingCart();\n  private cartItemUpdate: boolean;\n  private shippingAddress: ShippingAddress = new ShippingAddress();\n  private billingAddress: BillingAddress = new BillingAddress();\n  private userPayment: UserPayment = new UserPayment();\n  private userShipping: UserShipping = new UserShipping();\n  private userBilling: UserBilling = new UserBilling();\n\n  private userShippingList: UserShipping[] = [];\n  private userPaymentList: UserPayment[] = [];\n  private payment: Payment = new Payment();\n  private selectedTab: number;\n  private emptyShippingList: boolean = true;\n  private emptyPaymentList: boolean = true;\n  private stateList: string[] = [];\n  private shippingMethod: string;\n  private order: Order = new Order();\n\n  constructor(private router: Router, private cartService: CartService,\n   private shippingService: ShippingService, private paymentService: PaymentService,\n   private checkoutService: CheckoutService) { }\n\n  onSelect(book: Book){\n    this.selectedBook = book;\n    this.router.navigate(['/bookDetail', this.selectedBook.id]);\n  }\n\n  selectedChange(val: number){\n    this.selectedTab = val;\n  }\n\n  goToPayment(){\n    this.selectedTab = 1;\n  }\n\n  goToReview(){\n    this.selectedTab = 2;\n  }\n\n  getCartItemList(){\n    this.cartService.getCartItemList().subscribe(\n      res => {\n        this.cartItemList = res.json();\n        this.cartItemNumber = this.cartItemList.length;\n      },  \n      error =>{\n        console.log(error.text());\n      }\n    );\n  }\n\n  setShippingAddress(userShipping: UserShipping){\n    this.shippingAddress.shippingAddressName = userShipping.userShippingName;\n    this.shippingAddress.shippingAddressStreet1 = userShipping.userShippingStreet1;\n    this.shippingAddress.shippingAddressStreet2 = userShipping.userShippingStreet2;\n    this.shippingAddress.shippingAddressCity = userShipping.userShippingCity;\n    this.shippingAddress.shippingAddressState = userShipping.userShippingState;\n    this.shippingAddress.shippingAddressCountry = userShipping.userShippingCountry;\n    this.shippingAddress.shippingAddressZipcode = userShipping.userShippingZipcode;\n\n  }\n\n  setPaymentMethod(userPayment: UserPayment){\n    this.payment.type = userPayment.type;\n    this.payment.cardNumber = userPayment.cardNumber;\n    this.payment.expiryMonth = userPayment.expiryMonth;\n    this.payment.expiryYear = userPayment.expiryYear;\n    this.payment.cvc = userPayment.cvc;\n    this.payment.holderName = userPayment.holderName;\n    this.payment.defaultPayment = userPayment.defaultPayment;\n\n    this.billingAddress.billingAddressName = this.userBilling.userBillingName;\n    this.billingAddress.billingAddressStreet1 = this.userBilling.userBillingStreet1;\n    this.billingAddress.billingAddressStreet2 = this.userBilling.userBillingStreet2;\n    this.billingAddress.billingAddressCity = this.userBilling.userBillingCity;\n    this.billingAddress.billingAddressState = this.userBilling.userBillingState;\n    this.billingAddress.billingAddressCountry = this.userBilling.userBillingCountry;\n    this.billingAddress.billingAddressZipcode = this.userBilling.userBillingZipcode;\n  }\n\n  setBillingAsShipping(checked: boolean){\n    console.log(\"same as shipping\");\n\n    if(checked){\n      this.billingAddress.billingAddressName = this.shippingAddress.shippingAddressName;\n      this.billingAddress.billingAddressStreet1 = this.shippingAddress.shippingAddressStreet1;\n      this.billingAddress.billingAddressStreet2 = this.shippingAddress.shippingAddressStreet2;\n      this.billingAddress.billingAddressCity = this.shippingAddress.shippingAddressCity;\n      this.billingAddress.billingAddressState = this.shippingAddress.shippingAddressState;\n      this.billingAddress.billingAddressCountry = this.shippingAddress.shippingAddressCountry;\n      this.billingAddress.billingAddressZipcode = this.shippingAddress.shippingAddressZipcode;    \n    }\n  }\n\n  onSubmit(){\n    this.checkoutService.checkout(\n      this.shippingAddress,\n      this.billingAddress,\n      this.payment,\n      this.shippingMethod\n      ).subscribe(\n      res=>{\n        this.order=res.json();\n        console.log(this.order);\n\n        let navigationExtras: NavigationExtras = {\n            queryParams: {\n                \"order\": JSON.stringify(this.order)\n            }\n        };\n\n        this.router.navigate(['/orderSummary'], navigationExtras);\n      },\n      error=>{\n        console.log(error.text());\n      }\n      );\n    }\n\n  ngOnInit() {\n    this.getCartItemList();\n    this.cartService.getShoppingCart().subscribe(\n      res => {\n        this.shoppingCart = res.json();\n      },\n      error => {\n        console.log(error.text());\n      }\n    );\n\n    this.shippingService.getUserShippingList().subscribe(\n      res => {\n        this.userShippingList = res.json();\n        if(this.userShippingList.length){\n          this.emptyShippingList = false;\n\n          for(let userShipping of this.userShippingList){\n            if(userShipping.userShippingDefault){\n              this.setShippingAddress(userShipping);\n              return;\n            }\n          }\n        }\n      },\n      error => {\n        console.log(error.text());\n      }\n    );\n\n    this.paymentService.getUserPaymentList().subscribe(\n      res => {\n        this.userPaymentList = res.json();\n        if(this.userPaymentList.length){\n          this.emptyPaymentList = false;\n\n          for(let userPayment of this.userPaymentList){\n            if(userPayment.defaultPayment){\n              this.setPaymentMethod(userPayment);\n              return;\n            }\n          }\n        }\n      },\n      error => {\n        console.log(error.text());\n      }\n    );\n\n    for(let s in AppConst.usStates){\n      this.stateList.push(s);\n    }\n\n    this.payment.type=\"\";\n    this.payment.expiryMonth=\"\";\n    this.payment.expiryYear;\n    this.billingAddress.billingAddressState=\"\";\n    this.shippingAddress.shippingAddressState=\"\";\n    this.shippingMethod=\"groundShipping\";\n  }\n\n}\n","module.exports = \"hr {\\r\\n  border: 0;\\r\\n  clear:both;\\r\\n  display:block;\\r\\n  width: 96%;               \\r\\n  background-color:#DBDBDB;\\r\\n  height: 1px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n <app-logo spanLabel=\\\"Shopping Cart\\\"></app-logo>\\n\\n <div class=\\\"row\\\" style=\\\"margin-top: 40px;\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-6 text-left\\\">\\n          <button mat-raised-button class=\\\"custom\\\" routerLink=\\\"/bookList\\\">Continue shopping</button>\\n        </div>\\n        <div class=\\\"col-6 text-right\\\">\\n          <button mat-raised-button class=\\\"custom\\\" routerLink=\\\"/checkout\\\">Check out</button>\\n        </div>\\n      </div>\\n      <br/>\\n      <div *ngIf=\\\"cartItemUpdated\\\" class=\\\"alert alert-success\\\">\\n        Cart Item Update Successfully!\\n      </div>\\n      <div *ngIf=\\\"notEnoughStock\\\" class=\\\"alert alert-warning\\\">\\n        Some of the products don't have enought stock. Please update product quantity.\\n      </div>\\n      <div *ngIf=\\\"emptyCart\\\" class=\\\"alert alert-warning\\\">\\n        Your cart is empty. See if you can find what you link the bookshelf and add them to cart.\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-8\\\">\\n          <h4>Products</h4>\\n        </div>\\n        <div class=\\\"col-2\\\">\\n          <h4>Price</h4>\\n        </div>\\n        <div class=\\\"col-2\\\">\\n          <h4>Qty</h4>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngFor=\\\"let cartItem of cartItemList\\\" style=\\\"margin-bottom: 40px;\\\">  \\n        <hr/>\\n        <div class=\\\"col-2\\\">\\n          <a (click)=\\\"onSelect(cartItem.book)\\\"><img class=\\\"img-responsive pointer\\\" src=\\\"{{serverPath}}/image/book/{{cartItem.book.id}}.png\\\" style=\\\"width:100px;\\\" /></a>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n          <a class=\\\"pointer\\\" (click)=\\\"onSelect(cartItem.book)\\\"><h4>{{cartItem.book.title}}</h4></a>\\n          <p *ngIf=\\\"cartItem.book.inStockNumber>10\\\" style=\\\"color:green;\\\">In Stock</p>\\n          <p *ngIf=\\\"cartItem.book.inStockNumber<10\\\" style=\\\"color:brown;\\\">Only <span>{{cartItem.book.inStockNumber}}</span> In Stock</p>\\n          <p *ngIf=\\\"cartItem.book.inStockNumber == 0\\\" style=\\\"color:darkred;\\\">Out of Stock</p>\\n          <a class=\\\"pointer\\\" (click)=\\\"onRemoveCartItem(cartItem)\\\">Delete</a>\\n        </div>\\n        <div class=\\\"col-2\\\">\\n          <!-- ngClass attaches a class to this element based on a condition. In this case we attach the text strike to it -->\\n          <h5 style=\\\"color: #db3208; font-size: large;\\\">$<span [ngClass]=\\\"{'text-strike': cartItem.book.inStockNumber == 0}\\\">{{cartItem.book.ourPrice}}</span></h5>\\n        </div>\\n        <div class=\\\"col-2\\\">\\n          <input hidden=\\\"hidden\\\" name=\\\"id\\\" [(ngModel)]=\\\"cartItem.id\\\"/>\\n          <input id=\\\"cartItem.id\\\" name=\\\"qty\\\" [disabled]=\\\"cartItem.book.inStockNumber == 0\\\" class=\\\"form-control cartItemQty\\\" [(ngModel)]=\\\"cartItem.qty\\\" (ngModelChange)=\\\"cartItem.toUpdate=true\\\"/>\\n          <a style=\\\"margin-top: 20px;\\\" mat-button *ngIf=\\\"cartItem.toUpdate\\\" class=\\\"pointer mat-warn\\\" (click)=\\\"onUpdateCartItem(cartItem)\\\">Update</a>  \\n        </div>\\n\\n      </div>\\n      <div class=\\\"row\\\">\\n        <h4 class=\\\"col-12 text-right\\\"><strong style=\\\"font-size: large\\\">Total Price (<span>{{cartItemNumber}}</span> items): </strong><span style=\\\"color:#db3208;font-size: large\\\">$ <span>{{shoppingCart.grandTotal}}</span></span></h4>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AppConst } from '../../const/app-const';\nimport { Router } from '@angular/router';\nimport { Book } from '../../models/book';\nimport { CartService } from '../../services/cart.service';\nimport { ShoppingCart } from '../../models/shopping-cart';\nimport { CartItem } from '../../models/cart-item';\n\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.css']\n})\nexport class ShoppingCartComponent implements OnInit {\n\n  private serverPath = AppConst.serverPath;\n  private selectedBook: Book;\n  private cartItemList: CartItem[] = [];\n  private cartItemNumber: number;\n  private shoppingCart: ShoppingCart = new ShoppingCart();\n  private cartItemUpdated: boolean;\n  private emptyCart: boolean;\n  private notEnoughStock: boolean;\n\n  constructor(private router: Router, private cartService: CartService) { }\n\n  onSelect(book: Book){\n    this.selectedBook = book;\n    this.router.navigate(['/bookDetail', this.selectedBook.id]);\n  }\n\n  onRemoveCartItem(cartItem: CartItem){\n    this.cartService.removeCartItem(cartItem.id).subscribe(\n      res => {\n        console.log(res.text());\n        this.getCartItemList();\n        this.getShoppingCart();\n      },  \n      error =>{\n        console.log(error.text());\n      }\n    );\n  }\n\n  onUpdateCartItem(cartItem: CartItem){\n    this.cartService.updateCartItem(cartItem.id, cartItem.qty).subscribe(\n      res => {\n        console.log(res.text());\n        this.cartItemUpdated=true;\n        cartItem.toUpdate = false;\n        this.getShoppingCart();\n      },\n      error => {\n        console.log(error.text());\n      }\n    );\n  }\n\n  getCartItemList(){\n    this.cartService.getCartItemList().subscribe(\n      res => {\n        this.cartItemList = res.json();\n        this.cartItemNumber = this.cartItemList.length;\n      },\n      error => {\n        console.log(error.text());\n      }\n    );\n  }\n\n  getShoppingCart(){\n    this.cartService.getShoppingCart().subscribe(\n      res => {\n        console.log(res.json());\n        this.shoppingCart = res.json();\n      },\n      error => {\n        console.log(error.text());\n      }\n    );\n  }\n\n  onCheckout(){\n    if(this.cartItemNumber == 0){\n      this.emptyCart = true;\n    } else {\n      for(let item of this.cartItemList) {\n        if(item.qty > item.book.inStockNumber){\n          console.log(\"not enough stock in some item\");\n          this.notEnoughStock = true;\n          return;\n        }\n      }\n      // this.router.navigate('['/order']');\n    }\n  }\n  ngOnInit() {\n    this.getCartItemList();\n    this.getShoppingCart();\n  }\n\n}\n","export class AppConst{\r\n  public static serverPath = 'http://127.0.0.1:8181';\r\n\r\n  public static usStates = {\r\n\r\n    \"AL\": \"Alabama\",\r\n    \"AK\": \"Alaska\",\r\n    \"AZ\": \"Arizona\",\r\n    \"AR\": \"Arkansas\",\r\n    \"CA\": \"California\",\r\n    \"CO\": \"Colorado\",\r\n    \"CT\": \"Connecticut\",\r\n    \"DE\": \"Delaware\",\r\n    \"DC\": \"Dist of Columbia\",\r\n    \"FL\": \"Florida\",\r\n    \"GA\": \"Georgia\",\r\n    \"HI\": \"Hawaii\",\r\n    \"ID\": \"Idaho\",\r\n    \"IL\": \"Illinois\",\r\n    \"IN\": \"Indiana\",\r\n    \"IA\": \"Iowa\",\r\n    \"KS\": \"Kansas\",\r\n    \"KY\": \"Kentucky\",\r\n    \"LA\": \"Louisiana\",\r\n    \"ME\": \"Maine\",\r\n    \"MD\": \"Maryland\",\r\n    \"MA\": \"Massachusetts\",\r\n    \"MI\": \"Michigan\",\r\n    \"MN\": \"Minnesota\",\r\n    \"MS\": \"Mississippi\",\r\n    \"MO\": \"Missouri\",\r\n    \"MT\": \"Montana\",\r\n    \"NE\": \"Nebraska\",\r\n    \"NV\": \"Nevada\",\r\n    \"NH\": \"New Hampshire\",\r\n    \"NJ\": \"New Jersey\",\r\n    \"NM\": \"New Mexico\",\r\n    \"NY\": \"New York\",\r\n    \"NC\": \"North Carolina\",\r\n    \"ND\": \"North Dakota\",\r\n    \"OH\": \"Ohio\",\r\n    \"OK\": \"Oklahoma\",\r\n    \"OR\": \"Oregon\",\r\n    \"PA\": \"Pennsylvania\",\r\n    \"RI\": \"Rhode Island\",\r\n    \"SC\": \"South Carolina\",\r\n    \"SD\": \"South Dakota\",\r\n    \"TN\": \"Tennessee\",\r\n    \"TX\": \"Texas\",\r\n    \"UT\": \"Utah\",\r\n    \"VT\": \"Vermont\",\r\n    \"VA\": \"Virginia\",\r\n    \"WA\": \"Washington\",\r\n    \"WV\": \"West Virginia\",\r\n    \"WI\": \"Wisconsin\",\r\n    \"WY\": \"Wyoming\"\r\n  }  \r\n}","import { Order } from './order';\n\nexport class BillingAddress {\n  public id: number;\n  public billingAddressName: string;\n  public billingAddressStreet1: string;\n  public billingAddressStreet2: string;\n  public billingAddressCity: string;\n  public billingAddressState: string;\n  public billingAddressCountry: string;\n  public billingAddressZipcode: string;\n  public order: Order;\n}\n","export class Book {\n  public id: number;\n  public title: string;\n  public author: string;\n  public publisher: string;\n  public publicationDate: string;\n  public language: string;\n  public category: string;\n  public numberOfPages: number;\n  public format: string;\n  public isbn: string;\n  public shippingWeight: number;\n  public listPrice: number;\n  public ourPrice: number;\n  public active: boolean;\n  public description: string;\n  public inStockNumber: number;\n}\n","import { CartItem } from './cart-item';\n\nexport class Order {\n  public id: number;\n  public orderDate: string;\n  public shippingDate: string;\n  public shippingMethod: string;\n  public orderStatus: string;\n  public orderTotal: number;\n  public cartItemList: CartItem[];\n}\n","import { BillingAddress } from './billing-address';\n\nexport class Payment {\n  public id: number;\n  public type: string;\n  public cardName: string;\n  public cardNumber: string;\n  public expiryMonth: string;\n  public expiryYear: string;\n  public cvc: number;\n  public holderName: string;\n  public defaultPayment: boolean;\n  public billingAddress: BillingAddress;\n}\n","import { Order } from './order';\n\nexport class ShippingAddress {\n  public id:number;\n  public shippingAddressName: string;\n  public shippingAddressStreet1: string;\n  public shippingAddressStreet2: string;\n  public shippingAddressCity: string;\n  public shippingAddressState: string;\n  public shippingAddressCountry: string;\n  public shippingAddressZipcode: string;\n  public shippingAddressDefault: boolean;\n  public order: Order;\n}\n","import { User } from './user';\n\nexport class ShoppingCart {\n  public id: number;\n  public grandTotal: number;\n  public user: User;\n}\n","export class UserBilling {\n  public id: number;\n  public userBillingName: string;\n  public userBillingStreet1: string;\n  public userBillingStreet2: string;\n  public userBillingCity: string;\n  public userBillingState: string;\n  public userBillingCountry: string;\n  public userBillingZipcode: string;\n}\n","import { UserBilling } from './user-billing';\n\nexport class UserPayment {\n  public id: number;\n  public type: string;\n  public cardName: string;\n  public cardNumber: string;\n  public expiryMonth: string;\n  public expiryYear: string;\n  public cvc: number;\n  public holderName: string;\n  public defaultPayment: boolean;\n  public userBilling: UserBilling;\n}\n","export class UserShipping {\n  public id:number;\n  public userShippingName: string;\n  public userShippingStreet1: string;\n  public userShippingStreet2: string;\n  public userShippingCity: string;\n  public userShippingState: string;\n  public userShippingCountry: string;\n  public userShippingZipcode: string;\n  public userShippingDefault: boolean;\n}\n","import { UserPayment } from './user-payment';\nimport { UserShipping } from './user-shipping';\n\nexport class User {\n  public id: number;\n  public firstName: string;\n  public lastName: string;\n  public username: string;\n  public password: string;\n  public email: string;\n  public phone: string;\n  public enabled: boolean;\n  public userPaymentList: UserPayment[];\n  public userShippingList: UserShipping[];\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { AppConst } from '../const/app-const';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n\n  private serverPath: string = AppConst.serverPath;\n\n  constructor(private http: Http) { }\n\n  getBookList(){\n    let url = this.serverPath+'/book/bookList';\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.get(url, {headers: tokenHeader});\n  }\n\n  getBook(id: number){\n    let url = AppConst.serverPath+\"/book/\"+id;\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.get(url, {headers: tokenHeader});\n  }\n\n  searchBook(keyword: string){\n    let url = this.serverPath+'/book/searchBook';\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.post(url, keyword, {headers: tokenHeader});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { AppConst } from '../const/app-const';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  private serverPath: string = AppConst.serverPath;\n\n  constructor(private http: Http) { }\n\n  addItem(id: number, qty: number){\n    let url = this.serverPath+'/cart/add';\n    let cartItemInfo = {\n      \"bookId\" : id,\n      \"qty\" : qty\n    }\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.post(url, cartItemInfo, {headers: tokenHeader});\n  }\n\n  getCartItemList(){\n    let url = this.serverPath+'/cart/getCartItemList';\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.get(url, {headers: tokenHeader});\n  }\n\n  getShoppingCart(){\n    let url = this.serverPath+'/cart/getShoppingCart';\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.get(url, {headers: tokenHeader});\n  }\n\n  updateCartItem(cartItemId: number, qty: number){\n    let url = this.serverPath+'/cart/updateCartItem';\n\n    let cartItemInfo = {\n      \"cartItemId\" : cartItemId,\n      \"qty\" : qty\n    }\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.post(url, cartItemInfo, {headers: tokenHeader});\n  }\n\n  removeCartItem(id: number){\n    let url = this.serverPath+'/cart/removeItem';\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.post(url, id, {headers: tokenHeader});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { AppConst } from '../const/app-const';\nimport { ShippingAddress } from '../models/shipping-address';\nimport { BillingAddress } from '../models/billing-address';\nimport { Payment } from '../models/payment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckoutService {\n\n  private serverPath: string = AppConst.serverPath;\n\n  constructor(private http: Http) { }\n\n  checkout(shippingAddress: ShippingAddress, billingAddress: BillingAddress, payment: Payment, shippingMethod:string){\n    let url = this.serverPath+'/checkout/checkout';  \n    let order = {\n      \"shippingAddress\" : shippingAddress,\n      \"billingAddress\" : billingAddress,\n      \"payment\" : payment,\n      \"shippingMethod\" : shippingMethod\n    }\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.post(url, order, {headers: tokenHeader});\n  }\n\n  getUserOrder(){\n    let url = this.serverPath+'/checkout/getUserOrder';\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.get(url, {headers: tokenHeader});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Observable, of } from 'rxjs';\nimport { AppConst } from '../const/app-const';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private serverPath:string = AppConst.serverPath;\n  constructor(private http:Http, private router:Router) { }\n\n  sendCredential(username: string, password: string){\n    let url = this.serverPath+'/token';\n    let encodedCredentials = btoa(username+\":\"+password);\n    let basicHeader = \"Basic \" +encodedCredentials;\n    let headers = new Headers({\n      'Content-Type' : 'application/x-www-form-urlencoded',\n      'Authorization' : basicHeader\n    });\n\n    return this.http.get(url, {headers: headers});\n  }\n  \n  checkSession(){\n    let url = this.serverPath+'/checkSession';\n    let headers = new Headers({\n      'x-auth-token' : localStorage.getItem('xAuthToken'),\n    });\n\n    return this.http.get(url, {headers: headers});\n  }\n\n  logout(){\n    let url = this.serverPath+'/user/logout';\n    let headers = new Headers({\n      'x-auth-token' : localStorage.getItem('xAuthToken'),\n    });\n\n    return this.http.post(url, '', {headers: headers});\n  }\n\n  getCurrentUserName(){\n    let url = this.serverPath+'/user/getCurrentUser';\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.get(url, {headers: tokenHeader});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { AppConst } from '../const/app-const';\nimport { Order } from '../models/order';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n\n  private serverPath: string = AppConst.serverPath;\n\n  constructor(private http: Http) { }\n\n  getOrderList(){\n    let url = this.serverPath+'/order/getOrderList';\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.get(url, {headers: tokenHeader});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AppConst } from '../const/app-const';\nimport { Http, Headers } from '@angular/http';\nimport { UserPayment } from '../models/user-payment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentService {\n    private serverPath: string = AppConst.serverPath;\n\n  constructor(private http: Http) { }\n\n  newPayment(payment: UserPayment){\n    let url = this.serverPath+'/payment/add';\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.post(url, JSON.stringify(payment), {headers: tokenHeader});\n  }\n\n  getUserPaymentList(){\n    let url = this.serverPath+'/payment/getUserPaymentList';\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.get(url, {headers: tokenHeader});\n  }\n\n  removePayment(id: number){\n    let url = this.serverPath+'/payment/remove';\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.post(url, id, {headers: tokenHeader});\n  }\n\n  setDefaultPayment(id: number){\n    let url = this.serverPath+'/payment/setDefault';\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.post(url, id, {headers: tokenHeader});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AppConst } from '../const/app-const';\nimport { Http, Headers } from '@angular/http';\nimport { UserShipping } from '../models/user-shipping';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShippingService {\n\n  private serverPath: string = AppConst.serverPath;\n\n  constructor(private http: Http) { }\n\n  newShipping(Shipping: UserShipping){\n    let url = this.serverPath+'/shipping/add';\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.post(url, JSON.stringify(Shipping), {headers: tokenHeader});\n  }\n\n  getUserShippingList(){\n    let url = this.serverPath+'/shipping/getUserShippingList';\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.get(url, {headers: tokenHeader});\n  }\n\n  removeShipping(id: number){\n    let url = this.serverPath+'/shipping/remove';\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.post(url, id, {headers: tokenHeader});\n  }\n\n  setDefaultShipping(id: number){\n    let url = this.serverPath+'/shipping/setDefault';\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.post(url, id, {headers: tokenHeader});\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadImageService {\n\n  filesToUpload: Array<File>;\n\n  constructor() { \n    this.filesToUpload = [];\n  }\n\n  upload(userId: number){\n    this.makeFileRequest(\"http://localhost:8181/user/add/image?id=\" + userId, [], this.filesToUpload).\n    then((result) => {\n      console.log(result);\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  modify(userId: number){\n    console.log(this.filesToUpload);\n    if(this.filesToUpload.length > 0){\n        this.makeFileRequest(\"http://localhost:8181/user/update/image?id=\" + userId, [], this.filesToUpload).\n      then((result) => {\n        console.log(result);\n      }, (error) => {\n        console.log(error);\n      });\n    }\n  }\n  fileChangeEvent(fileInput: any){\n    this.filesToUpload = <Array<File>> fileInput.target.files;\n  }\n\n  makeFileRequest(url:string, params:Array<string>, files:Array<File>){\n    return new Promise((resolve, reject) =>{\n      var formData:any = new FormData();\n      var xhr = new XMLHttpRequest();\n      for(var i = 0; i < files.length; i++){\n        formData.append(\"uploads[]\", files[i], files[i].name);\n      }\n      xhr.onreadystatechange = function(){\n        if(xhr.readyState == 4){\n          if(xhr.status == 200){\n            console.log(\"image uploaded successfully!\");\n          } else {\n            reject(xhr.response);\n          }\n        }\n      }\n\n      xhr.open(\"POST\", url, true);\n      xhr.setRequestHeader(\"x-auth-token\", localStorage.getItem(\"xAuthToken\"));\n      xhr.send(formData);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { AppConst } from '../const/app-const';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private serverPath: string = AppConst.serverPath;\n\n  constructor(private http: Http) { }\n\n  addUserImage(user: User){\n    let url = this.serverPath+'/user/add';\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem('xAuthToken')\n    });\n\n    return this.http.post(url, user, {headers: tokenHeader});\n  }\n\n  newUser(username: string, email:string){\n    let url = this.serverPath+'/user/newUser';\n    let userInfo = {\n      \"username\": username,\n      \"email\": email\n    }\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem('xAuthToken')\n    });\n\n    return this.http.post(url, JSON.stringify(userInfo), {headers: tokenHeader});\n  }\n\n  retrievePassword(email:string){\n    let url = this.serverPath+'/user/forgetPassword';\n    let userInfo = {\n      \"email\": email\n    }\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem('xAuthToken')\n    });\n\n    return this.http.post(url, JSON.stringify(userInfo), {headers: tokenHeader});\n  }\n\n  updateUserInfo(user:User, newPassword: string, currentPassword:string){\n    let url = this.serverPath+\"/user/updateUserInfo\";\n    let userInfo={\n      \"id\":user.id,\n      \"firstName\":user.firstName,\n      \"lastName\":user.lastName,\n      \"username\":user.username,\n      \"currentPassword\":currentPassword,\n      \"email\":user.email,\n      \"newPassword\":newPassword\n    };\n\n    let tokenHeader = new Headers({\n      'Content-Type':'application/json',\n      'x-auth-token': localStorage.getItem(\"xAuthToken\")\n    });\n    return  this.http.post(url, JSON.stringify(userInfo), {headers:tokenHeader});\n  }\n\n  getCurrentUser(){\n    let url = this.serverPath+'/user/getCurrentUser';\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem('xAuthToken')\n    });\n\n    return this.http.get(url, {headers: tokenHeader});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}